define(['dart_sdk', 'packages/pin_code_fields/src/models/platform.dart', 'packages/flutter/src/painting/border_radius.dart', 'packages/flutter/src/painting/edge_insets.dart', 'packages/flutter/src/material/colors.dart', 'packages/flutter/src/painting/colors.dart', 'packages/flutter/src/rendering/flex.dart', 'packages/flutter/src/animation/curves.dart', 'packages/flutter/src/services/text_input.dart', 'packages/flutter/src/services/text_formatter.dart', 'packages/flutter/src/widgets/form.dart', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/painting/box_shadow.dart', 'packages/flutter/src/painting/strut_style.dart', 'packages/flutter/src/painting/gradient.dart', 'packages/flutter/src/animation/animation_controller.dart', 'packages/flutter/src/animation/listener_helpers.dart', 'packages/flutter/src/services/haptic_feedback.dart', 'packages/flutter/src/foundation/key.dart', 'packages/flutter/src/material/icon_button.dart', 'packages/flutter/src/painting/alignment.dart', 'packages/pin_code_fields/src/cursor_painter.dart', 'packages/flutter/src/material/button_bar.dart', 'packages/flutter/src/cupertino/dialog.dart', 'packages/flutter/src/painting/placeholder_span.dart', 'packages/flutter/src/painting/rounded_rectangle_border.dart', 'packages/flutter/src/material/text_form_field.dart', 'packages/flutter/src/material/input_border.dart', 'packages/flutter/src/services/clipboard.dart', 'packages/flutter/src/widgets/implicit_animations.dart', 'packages/flutter/src/painting/box_decoration.dart', 'packages/flutter/src/painting/box_border.dart', 'packages/flutter/src/painting/borders.dart', 'packages/flutter/src/widgets/animated_switcher.dart'], (function load__packages__pin_code_fields__pin_code_fields_dart(dart_sdk, packages__pin_code_fields__src__models__platform$46dart, packages__flutter__src__painting__border_radius$46dart, packages__flutter__src__painting__edge_insets$46dart, packages__flutter__src__material__colors$46dart, packages__flutter__src__painting__colors$46dart, packages__flutter__src__rendering__flex$46dart, packages__flutter__src__animation__curves$46dart, packages__flutter__src__services__text_input$46dart, packages__flutter__src__services__text_formatter$46dart, packages__flutter__src__widgets__form$46dart, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__painting__box_shadow$46dart, packages__flutter__src__painting__strut_style$46dart, packages__flutter__src__painting__gradient$46dart, packages__flutter__src__animation__animation_controller$46dart, packages__flutter__src__animation__listener_helpers$46dart, packages__flutter__src__services__haptic_feedback$46dart, packages__flutter__src__foundation__key$46dart, packages__flutter__src__material__icon_button$46dart, packages__flutter__src__painting__alignment$46dart, packages__pin_code_fields__src__cursor_painter$46dart, packages__flutter__src__material__button_bar$46dart, packages__flutter__src__cupertino__dialog$46dart, packages__flutter__src__painting__placeholder_span$46dart, packages__flutter__src__painting__rounded_rectangle_border$46dart, packages__flutter__src__material__text_form_field$46dart, packages__flutter__src__material__input_border$46dart, packages__flutter__src__services__clipboard$46dart, packages__flutter__src__widgets__implicit_animations$46dart, packages__flutter__src__painting__box_decoration$46dart, packages__flutter__src__painting__box_border$46dart, packages__flutter__src__painting__borders$46dart, packages__flutter__src__widgets__animated_switcher$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const async = dart_sdk.async;
  const _internal = dart_sdk._internal;
  const _interceptors = dart_sdk._interceptors;
  const math = dart_sdk.math;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const platform$ = packages__pin_code_fields__src__models__platform$46dart.src__models__platform;
  const border_radius = packages__flutter__src__painting__border_radius$46dart.src__painting__border_radius;
  const edge_insets = packages__flutter__src__painting__edge_insets$46dart.src__painting__edge_insets;
  const colors = packages__flutter__src__material__colors$46dart.src__material__colors;
  const colors$ = packages__flutter__src__painting__colors$46dart.src__painting__colors;
  const flex = packages__flutter__src__rendering__flex$46dart.src__rendering__flex;
  const curves = packages__flutter__src__animation__curves$46dart.src__animation__curves;
  const text_input = packages__flutter__src__services__text_input$46dart.src__services__text_input;
  const text_formatter = packages__flutter__src__services__text_formatter$46dart.src__services__text_formatter;
  const form = packages__flutter__src__widgets__form$46dart.src__widgets__form;
  const autofill = packages__flutter__src__widgets__widget_span$46dart.src__widgets__autofill;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const focus_manager = packages__flutter__src__widgets__widget_span$46dart.src__widgets__focus_manager;
  const editable_text = packages__flutter__src__widgets__widget_span$46dart.src__widgets__editable_text;
  const text$ = packages__flutter__src__widgets__widget_span$46dart.src__widgets__text;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const basic = packages__flutter__src__widgets__widget_span$46dart.src__widgets__basic;
  const transitions = packages__flutter__src__widgets__widget_span$46dart.src__widgets__transitions;
  const container = packages__flutter__src__widgets__widget_span$46dart.src__widgets__container;
  const gesture_detector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__gesture_detector;
  const media_query = packages__flutter__src__widgets__widget_span$46dart.src__widgets__media_query;
  const navigator = packages__flutter__src__widgets__widget_span$46dart.src__widgets__navigator;
  const ticker_provider = packages__flutter__src__widgets__widget_span$46dart.src__widgets__ticker_provider;
  const box_shadow = packages__flutter__src__painting__box_shadow$46dart.src__painting__box_shadow;
  const text_style = packages__flutter__src__painting__strut_style$46dart.src__painting__text_style;
  const gradient = packages__flutter__src__painting__gradient$46dart.src__painting__gradient;
  const animation_controller = packages__flutter__src__animation__animation_controller$46dart.src__animation__animation_controller;
  const tween = packages__flutter__src__animation__listener_helpers$46dart.src__animation__tween;
  const animations = packages__flutter__src__animation__listener_helpers$46dart.src__animation__animations;
  const animation = packages__flutter__src__animation__listener_helpers$46dart.src__animation__animation;
  const haptic_feedback = packages__flutter__src__services__haptic_feedback$46dart.src__services__haptic_feedback;
  const key = packages__flutter__src__foundation__key$46dart.src__foundation__key;
  const theme = packages__flutter__src__material__icon_button$46dart.src__material__theme;
  const input_decorator = packages__flutter__src__material__icon_button$46dart.src__material__input_decorator;
  const text_button = packages__flutter__src__material__icon_button$46dart.src__material__text_button;
  const alignment = packages__flutter__src__painting__alignment$46dart.src__painting__alignment;
  const cursor_painter = packages__pin_code_fields__src__cursor_painter$46dart.src__cursor_painter;
  const dialog = packages__flutter__src__material__button_bar$46dart.src__material__dialog;
  const dialog$ = packages__flutter__src__cupertino__dialog$46dart.src__cupertino__dialog;
  const text_span = packages__flutter__src__painting__placeholder_span$46dart.src__painting__text_span;
  const inline_span = packages__flutter__src__painting__placeholder_span$46dart.src__painting__inline_span;
  const rounded_rectangle_border = packages__flutter__src__painting__rounded_rectangle_border$46dart.src__painting__rounded_rectangle_border;
  const text_form_field = packages__flutter__src__material__text_form_field$46dart.src__material__text_form_field;
  const input_border = packages__flutter__src__material__input_border$46dart.src__material__input_border;
  const clipboard = packages__flutter__src__services__clipboard$46dart.src__services__clipboard;
  const implicit_animations = packages__flutter__src__widgets__implicit_animations$46dart.src__widgets__implicit_animations;
  const box_decoration = packages__flutter__src__painting__box_decoration$46dart.src__painting__box_decoration;
  const box_border = packages__flutter__src__painting__box_border$46dart.src__painting__box_border;
  const borders = packages__flutter__src__painting__borders$46dart.src__painting__borders;
  const animated_switcher = packages__flutter__src__widgets__animated_switcher$46dart.src__widgets__animated_switcher;
  var pin_code_fields = Object.create(dart.library);
  var $isNotEmpty = dartx.isNotEmpty;
  var $join = dartx.join;
  var $substring = dartx.substring;
  var $length = dartx.length;
  var $where = dartx.where;
  var $_get = dartx._get;
  var $isEmpty = dartx.isEmpty;
  var $trim = dartx.trim;
  var $add = dartx.add;
  var $_set = dartx._set;
  var $addAll = dartx.addAll;
  dart._checkModuleNullSafetyMode(true);
  var T = {
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ListOfString: () => (T.ListOfString = dart.constFn(core.List$(core.String)))(),
    TweenOfdouble: () => (T.TweenOfdouble = dart.constFn(tween.Tween$(core.double)))(),
    TweenOfOffset: () => (T.TweenOfOffset = dart.constFn(tween.Tween$(ui.Offset)))(),
    AnimationStatusTovoid: () => (T.AnimationStatusTovoid = dart.constFn(dart.fnType(dart.void, [animation.AnimationStatus])))(),
    ErrorAnimationTypeTovoid: () => (T.ErrorAnimationTypeTovoid = dart.constFn(dart.fnType(dart.void, [pin_code_fields.ErrorAnimationType])))(),
    FutureOfvoid: () => (T.FutureOfvoid = dart.constFn(async.Future$(dart.void)))(),
    StringTobool: () => (T.StringTobool = dart.constFn(dart.fnType(core.bool, [core.String])))(),
    ValueKeyOfString: () => (T.ValueKeyOfString = dart.constFn(key.ValueKey$(core.String)))(),
    JSArrayOfWidget: () => (T.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    JSArrayOfInlineSpan: () => (T.JSArrayOfInlineSpan = dart.constFn(_interceptors.JSArray$(inline_span.InlineSpan)))(),
    BuildContextToStatelessWidget: () => (T.BuildContextToStatelessWidget = dart.constFn(dart.fnType(framework.StatelessWidget, [framework.BuildContext])))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    ListOfTextInputFormatter: () => (T.ListOfTextInputFormatter = dart.constFn(core.List$(text_formatter.TextInputFormatter)))(),
    VoidToFutureOfvoid: () => (T.VoidToFutureOfvoid = dart.constFn(dart.fnType(T.FutureOfvoid(), [])))(),
    AnimationOfdouble: () => (T.AnimationOfdouble = dart.constFn(animation.Animation$(core.double)))(),
    WidgetAndAnimationOfdoubleToWidget: () => (T.WidgetAndAnimationOfdoubleToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.Widget, T.AnimationOfdouble()])))(),
    ObjectN: () => (T.ObjectN = dart.constFn(dart.nullable(core.Object)))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const({
        __proto__: pin_code_fields.HapticFeedbackTypes.prototype,
        [_name$]: "HapticFeedbackTypes.heavy",
        index: 0
      });
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: pin_code_fields.HapticFeedbackTypes.prototype,
        [_name$]: "HapticFeedbackTypes.light",
        index: 1
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: pin_code_fields.HapticFeedbackTypes.prototype,
        [_name$]: "HapticFeedbackTypes.medium",
        index: 2
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: pin_code_fields.HapticFeedbackTypes.prototype,
        [_name$]: "HapticFeedbackTypes.selection",
        index: 3
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: pin_code_fields.HapticFeedbackTypes.prototype,
        [_name$]: "HapticFeedbackTypes.vibrate",
        index: 4
      });
    },
    get C5() {
      return C[5] = dart.constList([C[0] || CT.C0, C[1] || CT.C1, C[2] || CT.C2, C[3] || CT.C3, C[4] || CT.C4], pin_code_fields.HapticFeedbackTypes);
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: pin_code_fields.AnimationType.prototype,
        [_name$]: "AnimationType.scale",
        index: 0
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: pin_code_fields.AnimationType.prototype,
        [_name$]: "AnimationType.slide",
        index: 1
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: pin_code_fields.AnimationType.prototype,
        [_name$]: "AnimationType.fade",
        index: 2
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: pin_code_fields.AnimationType.prototype,
        [_name$]: "AnimationType.none",
        index: 3
      });
    },
    get C10() {
      return C[10] = dart.constList([C[6] || CT.C6, C[7] || CT.C7, C[8] || CT.C8, C[9] || CT.C9], pin_code_fields.AnimationType);
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: platform$.Platform.prototype,
        [_name]: "Platform.other",
        index: 1
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 0,
        [Radius_x]: 0
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [BorderRadius_bottomRight]: C[13] || CT.C13,
        [BorderRadius_bottomLeft]: C[13] || CT.C13,
        [BorderRadius_topRight]: C[13] || CT.C13,
        [BorderRadius_topLeft]: C[13] || CT.C13
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 0
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: pin_code_fields.PinCodeFieldShape.prototype,
        [_name$]: "PinCodeFieldShape.underline",
        index: 1
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293457385.0
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4291356361.0
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4289058471.0
      });
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4286695300.0
      });
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4284922730.0
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4283215696.0
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4282622023.0
      });
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4281896508.0
      });
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4281236786.0
      });
    },
    get C27() {
      return C[27] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279983648.0
      });
    },
    get C17() {
      return C[17] = dart.constMap(core.int, ui.Color, [50, C[18] || CT.C18, 100, C[19] || CT.C19, 200, C[20] || CT.C20, 300, C[21] || CT.C21, 400, C[22] || CT.C22, 500, C[23] || CT.C23, 600, C[24] || CT.C24, 700, C[25] || CT.C25, 800, C[26] || CT.C26, 900, C[27] || CT.C27]);
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: colors.MaterialColor.prototype,
        [Color_value]: 4283215696.0,
        [ColorSwatch__swatch]: C[17] || CT.C17
      });
    },
    get C30() {
      return C[30] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293128957.0
      });
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4290502395.0
      });
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4287679225.0
      });
    },
    get C33() {
      return C[33] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4284790262.0
      });
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4282557941.0
      });
    },
    get C35() {
      return C[35] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4280391411.0
      });
    },
    get C36() {
      return C[36] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4280191205.0
      });
    },
    get C37() {
      return C[37] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279858898.0
      });
    },
    get C38() {
      return C[38] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279592384.0
      });
    },
    get C39() {
      return C[39] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279060385.0
      });
    },
    get C29() {
      return C[29] = dart.constMap(core.int, ui.Color, [50, C[30] || CT.C30, 100, C[31] || CT.C31, 200, C[32] || CT.C32, 300, C[33] || CT.C33, 400, C[34] || CT.C34, 500, C[35] || CT.C35, 600, C[36] || CT.C36, 700, C[37] || CT.C37, 800, C[38] || CT.C38, 900, C[39] || CT.C39]);
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: colors.MaterialColor.prototype,
        [Color_value]: 4280391411.0,
        [ColorSwatch__swatch]: C[29] || CT.C29
      });
    },
    get C42() {
      return C[42] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294962158.0
      });
    },
    get C43() {
      return C[43] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294954450.0
      });
    },
    get C44() {
      return C[44] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293892762.0
      });
    },
    get C45() {
      return C[45] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293227379.0
      });
    },
    get C46() {
      return C[46] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293874512.0
      });
    },
    get C47() {
      return C[47] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294198070.0
      });
    },
    get C48() {
      return C[48] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293212469.0
      });
    },
    get C49() {
      return C[49] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4292030255.0
      });
    },
    get C50() {
      return C[50] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4291176488.0
      });
    },
    get C51() {
      return C[51] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4290190364.0
      });
    },
    get C41() {
      return C[41] = dart.constMap(core.int, ui.Color, [50, C[42] || CT.C42, 100, C[43] || CT.C43, 200, C[44] || CT.C44, 300, C[45] || CT.C45, 400, C[46] || CT.C46, 500, C[47] || CT.C47, 600, C[48] || CT.C48, 700, C[49] || CT.C49, 800, C[50] || CT.C50, 900, C[51] || CT.C51]);
    },
    get C40() {
      return C[40] = dart.const({
        __proto__: colors.MaterialColor.prototype,
        [Color_value]: 4294198070.0,
        [ColorSwatch__swatch]: C[41] || CT.C41
      });
    },
    get C54() {
      return C[54] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294638330.0
      });
    },
    get C55() {
      return C[55] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294309365.0
      });
    },
    get C56() {
      return C[56] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293848814.0
      });
    },
    get C57() {
      return C[57] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4292927712.0
      });
    },
    get C58() {
      return C[58] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4292269782.0
      });
    },
    get C59() {
      return C[59] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4290624957.0
      });
    },
    get C60() {
      return C[60] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4288585374.0
      });
    },
    get C61() {
      return C[61] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4285887861.0
      });
    },
    get C62() {
      return C[62] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4284572001.0
      });
    },
    get C63() {
      return C[63] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4282532418.0
      });
    },
    get C64() {
      return C[64] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4281348144.0
      });
    },
    get C65() {
      return C[65] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4280361249.0
      });
    },
    get C53() {
      return C[53] = dart.constMap(core.int, ui.Color, [50, C[54] || CT.C54, 100, C[55] || CT.C55, 200, C[56] || CT.C56, 300, C[57] || CT.C57, 350, C[58] || CT.C58, 400, C[59] || CT.C59, 500, C[60] || CT.C60, 600, C[61] || CT.C61, 700, C[62] || CT.C62, 800, C[63] || CT.C63, 850, C[64] || CT.C64, 900, C[65] || CT.C65]);
    },
    get C52() {
      return C[52] = dart.const({
        __proto__: colors.MaterialColor.prototype,
        [Color_value]: 4288585374.0,
        [ColorSwatch__swatch]: C[53] || CT.C53
      });
    },
    get C68() {
      return C[68] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294937216.0
      });
    },
    get C69() {
      return C[69] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294922834.0
      });
    },
    get C70() {
      return C[70] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294907716.0
      });
    },
    get C71() {
      return C[71] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4292149248.0
      });
    },
    get C67() {
      return C[67] = dart.constMap(core.int, ui.Color, [100, C[68] || CT.C68, 200, C[69] || CT.C69, 400, C[70] || CT.C70, 700, C[71] || CT.C71]);
    },
    get C66() {
      return C[66] = dart.const({
        __proto__: colors.MaterialAccentColor.prototype,
        [Color_value]: 4294922834.0,
        [ColorSwatch__swatch]: C[67] || CT.C67
      });
    },
    get C72() {
      return C[72] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 500000
      });
    },
    get C73() {
      return C[73] = dart.const({
        __proto__: flex.MainAxisAlignment.prototype,
        [_name$0]: "MainAxisAlignment.spaceBetween",
        index: 3
      });
    },
    get C74() {
      return C[74] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 150000
      });
    },
    get C75() {
      return C[75] = dart.const({
        __proto__: curves.Cubic.prototype,
        [Cubic_d]: 1,
        [Cubic_c]: 0.58,
        [Cubic_b]: 0,
        [Cubic_a]: 0.42
      });
    },
    get C76() {
      return C[76] = dart.const({
        __proto__: text_input.TextInputType.prototype,
        [TextInputType_decimal]: null,
        [TextInputType_signed]: null,
        [TextInputType_index]: 7
      });
    },
    get C77() {
      return C[77] = dart.constList([], text_formatter.TextInputFormatter);
    },
    get C78() {
      return C[78] = dart.const({
        __proto__: text_input.TextCapitalization.prototype,
        [_name$1]: "TextCapitalization.none",
        index: 3
      });
    },
    get C79() {
      return C[79] = dart.const({
        __proto__: text_input.TextInputAction.prototype,
        [_name$1]: "TextInputAction.done",
        index: 2
      });
    },
    get C80() {
      return C[80] = dart.const({
        __proto__: pin_code_fields.PinTheme.prototype,
        [fieldOuterPadding$]: C[14] || CT.C14,
        [shape$]: C[15] || CT.C15,
        [borderWidth$]: 2,
        [fieldWidth$]: 40,
        [fieldHeight$]: 50,
        [borderRadius$]: C[12] || CT.C12,
        [errorBorderColor$]: C[66] || CT.C66,
        [inactiveFillColor$]: C[40] || CT.C40,
        [selectedFillColor$]: C[28] || CT.C28,
        [activeFillColor$]: C[16] || CT.C16,
        [disabledColor$]: C[52] || CT.C52,
        [inactiveColor$]: C[40] || CT.C40,
        [selectedColor$]: C[28] || CT.C28,
        [activeColor$]: C[16] || CT.C16
      });
    },
    get C81() {
      return C[81] = dart.const({
        __proto__: form.AutovalidateMode.prototype,
        [_name$2]: "AutovalidateMode.onUserInteraction",
        index: 2
      });
    },
    get C82() {
      return C[82] = dart.const({
        __proto__: autofill.AutofillContextAction.prototype,
        [_name$3]: "AutofillContextAction.commit",
        index: 0
      });
    },
    get C83() {
      return C[83] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 20,
        [EdgeInsets_right]: 20,
        [EdgeInsets_top]: 20,
        [EdgeInsets_left]: 20
      });
    },
    get C84() {
      return C[84] = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 0,
        [OffsetBase__dx]: 0.1
      });
    },
    get C87() {
      return C[87] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 29,
        [_Location_line]: 538,
        [_Location_file]: null
      });
    },
    get C88() {
      return C[88] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 9,
        [_Location_line]: 539,
        [_Location_file]: null
      });
    },
    get C89() {
      return C[89] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 9,
        [_Location_line]: 540,
        [_Location_file]: null
      });
    },
    get C86() {
      return C[86] = dart.constList([C[87] || CT.C87, C[88] || CT.C88, C[89] || CT.C89], widget_inspector._Location);
    },
    get C85() {
      return C[85] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[86] || CT.C86,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 537,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C92() {
      return C[92] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 15,
        [_Location_line]: 552,
        [_Location_file]: null
      });
    },
    get C93() {
      return C[93] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 15,
        [_Location_line]: 553,
        [_Location_file]: null
      });
    },
    get C94() {
      return C[94] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 15,
        [_Location_line]: 554,
        [_Location_file]: null
      });
    },
    get C91() {
      return C[91] = dart.constList([C[92] || CT.C92, C[93] || CT.C93, C[94] || CT.C94], widget_inspector._Location);
    },
    get C90() {
      return C[90] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[91] || CT.C91,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 551,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C97() {
      return C[97] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gradient",
        [_Location_column]: 13,
        [_Location_line]: 550,
        [_Location_file]: null
      });
    },
    get C98() {
      return C[98] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 551,
        [_Location_file]: null
      });
    },
    get C96() {
      return C[96] = dart.constList([C[97] || CT.C97, C[98] || CT.C98], widget_inspector._Location);
    },
    get C95() {
      return C[95] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[96] || CT.C96,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 549,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C101() {
      return C[101] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 13,
        [_Location_line]: 558,
        [_Location_file]: null
      });
    },
    get C102() {
      return C[102] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 13,
        [_Location_line]: 559,
        [_Location_file]: null
      });
    },
    get C103() {
      return C[103] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 13,
        [_Location_line]: 560,
        [_Location_file]: null
      });
    },
    get C100() {
      return C[100] = dart.constList([C[101] || CT.C101, C[102] || CT.C102, C[103] || CT.C103], widget_inspector._Location);
    },
    get C99() {
      return C[99] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[100] || CT.C100,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 557,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C106() {
      return C[106] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "size",
        [_Location_column]: 21,
        [_Location_line]: 600,
        [_Location_file]: null
      });
    },
    get C107() {
      return C[107] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "painter",
        [_Location_column]: 21,
        [_Location_line]: 601,
        [_Location_file]: null
      });
    },
    get C105() {
      return C[105] = dart.constList([C[106] || CT.C106, C[107] || CT.C107], widget_inspector._Location);
    },
    get C104() {
      return C[104] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[105] || CT.C105,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 599,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C110() {
      return C[110] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 19,
        [_Location_line]: 598,
        [_Location_file]: null
      });
    },
    get C111() {
      return C[111] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 19,
        [_Location_line]: 599,
        [_Location_file]: null
      });
    },
    get C109() {
      return C[109] = dart.constList([C[110] || CT.C110, C[111] || CT.C111], widget_inspector._Location);
    },
    get C108() {
      return C[108] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[109] || CT.C109,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 597,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C114() {
      return C[114] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 17,
        [_Location_line]: 596,
        [_Location_file]: null
      });
    },
    get C115() {
      return C[115] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 597,
        [_Location_file]: null
      });
    },
    get C113() {
      return C[113] = dart.constList([C[114] || CT.C114, C[115] || CT.C115], widget_inspector._Location);
    },
    get C112() {
      return C[112] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[113] || CT.C113,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 595,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C118() {
      return C[118] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 595,
        [_Location_file]: null
      });
    },
    get C117() {
      return C[117] = dart.constList([C[118] || CT.C118], widget_inspector._Location);
    },
    get C116() {
      return C[116] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[117] || CT.C117,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 594,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C121() {
      return C[121] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 11,
        [_Location_line]: 592,
        [_Location_file]: null
      });
    },
    get C122() {
      return C[122] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 11,
        [_Location_line]: 593,
        [_Location_file]: null
      });
    },
    get C120() {
      return C[120] = dart.constList([C[121] || CT.C121, C[122] || CT.C122], widget_inspector._Location);
    },
    get C119() {
      return C[119] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[120] || CT.C120,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 591,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C125() {
      return C[125] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "size",
        [_Location_column]: 15,
        [_Location_line]: 619,
        [_Location_file]: null
      });
    },
    get C126() {
      return C[126] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "painter",
        [_Location_column]: 15,
        [_Location_line]: 620,
        [_Location_file]: null
      });
    },
    get C124() {
      return C[124] = dart.constList([C[125] || CT.C125, C[126] || CT.C126], widget_inspector._Location);
    },
    get C123() {
      return C[123] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[124] || CT.C124,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 618,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C129() {
      return C[129] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 13,
        [_Location_line]: 617,
        [_Location_file]: null
      });
    },
    get C130() {
      return C[130] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 618,
        [_Location_file]: null
      });
    },
    get C128() {
      return C[128] = dart.constList([C[129] || CT.C129, C[130] || CT.C130], widget_inspector._Location);
    },
    get C127() {
      return C[127] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[128] || CT.C128,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 616,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C133() {
      return C[133] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 616,
        [_Location_file]: null
      });
    },
    get C132() {
      return C[132] = dart.constList([C[133] || CT.C133], widget_inspector._Location);
    },
    get C131() {
      return C[131] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[132] || CT.C132,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 615,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C136() {
      return C[136] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 52,
        [_Location_line]: 648,
        [_Location_file]: null
      });
    },
    get C135() {
      return C[135] = dart.constList([C[136] || CT.C136], widget_inspector._Location);
    },
    get C134() {
      return C[134] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[135] || CT.C135,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 648,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C139() {
      return C[139] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "text",
        [_Location_column]: 17,
        [_Location_line]: 650,
        [_Location_file]: null
      });
    },
    get C138() {
      return C[138] = dart.constList([C[139] || CT.C139], widget_inspector._Location);
    },
    get C137() {
      return C[137] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[138] || CT.C138,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 649,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C142() {
      return C[142] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "title",
        [_Location_column]: 15,
        [_Location_line]: 648,
        [_Location_file]: null
      });
    },
    get C143() {
      return C[143] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "content",
        [_Location_column]: 15,
        [_Location_line]: 649,
        [_Location_file]: null
      });
    },
    get C144() {
      return C[144] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "actions",
        [_Location_column]: 15,
        [_Location_line]: 669,
        [_Location_file]: null
      });
    },
    get C141() {
      return C[141] = dart.constList([C[142] || CT.C142, C[143] || CT.C143, C[144] || CT.C144], widget_inspector._Location);
    },
    get C140() {
      return C[140] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[141] || CT.C141,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 647,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C147() {
      return C[147] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 52,
        [_Location_line]: 675,
        [_Location_file]: null
      });
    },
    get C146() {
      return C[146] = dart.constList([C[147] || CT.C147], widget_inspector._Location);
    },
    get C145() {
      return C[145] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[146] || CT.C146,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 675,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C150() {
      return C[150] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "text",
        [_Location_column]: 17,
        [_Location_line]: 677,
        [_Location_file]: null
      });
    },
    get C149() {
      return C[149] = dart.constList([C[150] || CT.C150], widget_inspector._Location);
    },
    get C148() {
      return C[148] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[149] || CT.C149,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 676,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C153() {
      return C[153] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shape",
        [_Location_column]: 15,
        [_Location_line]: 672,
        [_Location_file]: null
      });
    },
    get C154() {
      return C[154] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "title",
        [_Location_column]: 15,
        [_Location_line]: 675,
        [_Location_file]: null
      });
    },
    get C155() {
      return C[155] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "content",
        [_Location_column]: 15,
        [_Location_line]: 676,
        [_Location_file]: null
      });
    },
    get C156() {
      return C[156] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "actions",
        [_Location_column]: 15,
        [_Location_line]: 695,
        [_Location_file]: null
      });
    },
    get C152() {
      return C[152] = dart.constList([C[153] || CT.C153, C[154] || CT.C154, C[155] || CT.C155, C[156] || CT.C156], widget_inspector._Location);
    },
    get C151() {
      return C[151] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[152] || CT.C152,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 671,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C159() {
      return C[159] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textInputAction",
        [_Location_column]: 7,
        [_Location_line]: 703,
        [_Location_file]: null
      });
    },
    get C160() {
      return C[160] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 7,
        [_Location_line]: 704,
        [_Location_file]: null
      });
    },
    get C161() {
      return C[161] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusNode",
        [_Location_column]: 7,
        [_Location_line]: 705,
        [_Location_file]: null
      });
    },
    get C162() {
      return C[162] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enabled",
        [_Location_column]: 7,
        [_Location_line]: 706,
        [_Location_file]: null
      });
    },
    get C163() {
      return C[163] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "autofillHints",
        [_Location_column]: 7,
        [_Location_line]: 707,
        [_Location_file]: null
      });
    },
    get C164() {
      return C[164] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "autofocus",
        [_Location_column]: 7,
        [_Location_line]: 710,
        [_Location_file]: null
      });
    },
    get C165() {
      return C[165] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "autocorrect",
        [_Location_column]: 7,
        [_Location_line]: 711,
        [_Location_file]: null
      });
    },
    get C166() {
      return C[166] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "keyboardType",
        [_Location_column]: 7,
        [_Location_line]: 712,
        [_Location_file]: null
      });
    },
    get C167() {
      return C[167] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "keyboardAppearance",
        [_Location_column]: 7,
        [_Location_line]: 713,
        [_Location_file]: null
      });
    },
    get C168() {
      return C[168] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textCapitalization",
        [_Location_column]: 7,
        [_Location_line]: 714,
        [_Location_file]: null
      });
    },
    get C169() {
      return C[169] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "validator",
        [_Location_column]: 7,
        [_Location_line]: 715,
        [_Location_file]: null
      });
    },
    get C170() {
      return C[170] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onSaved",
        [_Location_column]: 7,
        [_Location_line]: 716,
        [_Location_file]: null
      });
    },
    get C171() {
      return C[171] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "autovalidateMode",
        [_Location_column]: 7,
        [_Location_line]: 717,
        [_Location_file]: null
      });
    },
    get C172() {
      return C[172] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "inputFormatters",
        [_Location_column]: 7,
        [_Location_line]: 718,
        [_Location_file]: null
      });
    },
    get C173() {
      return C[173] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onFieldSubmitted",
        [_Location_column]: 7,
        [_Location_line]: 725,
        [_Location_file]: null
      });
    },
    get C174() {
      return C[174] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableInteractiveSelection",
        [_Location_column]: 7,
        [_Location_line]: 726,
        [_Location_file]: null
      });
    },
    get C175() {
      return C[175] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "showCursor",
        [_Location_column]: 7,
        [_Location_line]: 727,
        [_Location_file]: null
      });
    },
    get C176() {
      return C[176] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "cursorWidth",
        [_Location_column]: 7,
        [_Location_line]: 729,
        [_Location_file]: null
      });
    },
    get C177() {
      return C[177] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 7,
        [_Location_line]: 730,
        [_Location_file]: null
      });
    },
    get C178() {
      return C[178] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 7,
        [_Location_line]: 738,
        [_Location_file]: null
      });
    },
    get C179() {
      return C[179] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollPadding",
        [_Location_column]: 7,
        [_Location_line]: 745,
        [_Location_file]: null
      });
    },
    get C180() {
      return C[180] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "readOnly",
        [_Location_column]: 7,
        [_Location_line]: 746,
        [_Location_file]: null
      });
    },
    get C158() {
      return C[158] = dart.constList([C[159] || CT.C159, C[160] || CT.C160, C[161] || CT.C161, C[162] || CT.C162, C[163] || CT.C163, C[164] || CT.C164, C[165] || CT.C165, C[166] || CT.C166, C[167] || CT.C167, C[168] || CT.C168, C[169] || CT.C169, C[170] || CT.C170, C[171] || CT.C171, C[172] || CT.C172, C[173] || CT.C173, C[174] || CT.C174, C[175] || CT.C175, C[176] || CT.C176, C[177] || CT.C177, C[178] || CT.C178, C[179] || CT.C179, C[180] || CT.C180], widget_inspector._Location);
    },
    get C157() {
      return C[157] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[158] || CT.C158,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 702,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C183() {
      return C[183] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onDisposeAction",
        [_Location_column]: 23,
        [_Location_line]: 766,
        [_Location_file]: null
      });
    },
    get C184() {
      return C[184] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 23,
        [_Location_line]: 767,
        [_Location_file]: null
      });
    },
    get C182() {
      return C[182] = dart.constList([C[183] || CT.C183, C[184] || CT.C184], widget_inspector._Location);
    },
    get C181() {
      return C[181] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[182] || CT.C182,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 765,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C187() {
      return C[187] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "absorbing",
        [_Location_column]: 15,
        [_Location_line]: 762,
        [_Location_file]: null
      });
    },
    get C188() {
      return C[188] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 763,
        [_Location_file]: null
      });
    },
    get C186() {
      return C[186] = dart.constList([C[187] || CT.C187, C[188] || CT.C188], widget_inspector._Location);
    },
    get C185() {
      return C[185] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[186] || CT.C186,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 760,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C191() {
      return C[191] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mainAxisAlignment",
        [_Location_column]: 19,
        [_Location_line]: 794,
        [_Location_file]: null
      });
    },
    get C192() {
      return C[192] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 19,
        [_Location_line]: 795,
        [_Location_file]: null
      });
    },
    get C190() {
      return C[190] = dart.constList([C[191] || CT.C191, C[192] || CT.C192], widget_inspector._Location);
    },
    get C189() {
      return C[189] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[190] || CT.C190,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 793,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C195() {
      return C[195] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTap",
        [_Location_column]: 17,
        [_Location_line]: 775,
        [_Location_file]: null
      });
    },
    get C196() {
      return C[196] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onLongPress",
        [_Location_column]: 17,
        [_Location_line]: 779,
        [_Location_file]: null
      });
    },
    get C197() {
      return C[197] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 793,
        [_Location_file]: null
      });
    },
    get C194() {
      return C[194] = dart.constList([C[195] || CT.C195, C[196] || CT.C196, C[197] || CT.C197], widget_inspector._Location);
    },
    get C193() {
      return C[193] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[194] || CT.C194,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 774,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C200() {
      return C[200] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "top",
        [_Location_column]: 15,
        [_Location_line]: 771,
        [_Location_file]: null
      });
    },
    get C201() {
      return C[201] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "left",
        [_Location_column]: 15,
        [_Location_line]: 772,
        [_Location_file]: null
      });
    },
    get C202() {
      return C[202] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "right",
        [_Location_column]: 15,
        [_Location_line]: 773,
        [_Location_file]: null
      });
    },
    get C203() {
      return C[203] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 774,
        [_Location_file]: null
      });
    },
    get C199() {
      return C[199] = dart.constList([C[200] || CT.C200, C[201] || CT.C201, C[202] || CT.C202, C[203] || CT.C203], widget_inspector._Location);
    },
    get C198() {
      return C[198] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[199] || CT.C199,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 770,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C206() {
      return C[206] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 11,
        [_Location_line]: 758,
        [_Location_file]: null
      });
    },
    get C207() {
      return C[207] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 11,
        [_Location_line]: 759,
        [_Location_file]: null
      });
    },
    get C205() {
      return C[205] = dart.constList([C[206] || CT.C206, C[207] || CT.C207], widget_inspector._Location);
    },
    get C204() {
      return C[204] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[205] || CT.C205,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 757,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C210() {
      return C[210] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 9,
        [_Location_line]: 753,
        [_Location_file]: null
      });
    },
    get C211() {
      return C[211] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 9,
        [_Location_line]: 756,
        [_Location_file]: null
      });
    },
    get C212() {
      return C[212] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 757,
        [_Location_file]: null
      });
    },
    get C209() {
      return C[209] = dart.constList([C[210] || CT.C210, C[211] || CT.C211, C[212] || CT.C212], widget_inspector._Location);
    },
    get C208() {
      return C[208] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[209] || CT.C209,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 751,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C215() {
      return C[215] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "position",
        [_Location_column]: 7,
        [_Location_line]: 750,
        [_Location_file]: null
      });
    },
    get C216() {
      return C[216] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 751,
        [_Location_file]: null
      });
    },
    get C214() {
      return C[214] = dart.constList([C[215] || CT.C215, C[216] || CT.C216], widget_inspector._Location);
    },
    get C213() {
      return C[213] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[214] || CT.C214,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 749,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C219() {
      return C[219] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scale",
        [_Location_column]: 25,
        [_Location_line]: 845,
        [_Location_file]: null
      });
    },
    get C220() {
      return C[220] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 25,
        [_Location_line]: 846,
        [_Location_file]: null
      });
    },
    get C218() {
      return C[218] = dart.constList([C[219] || CT.C219, C[220] || CT.C220], widget_inspector._Location);
    },
    get C217() {
      return C[217] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[218] || CT.C218,
        [_Location_name]: null,
        [_Location_column]: 30,
        [_Location_line]: 844,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C223() {
      return C[223] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 25,
        [_Location_line]: 850,
        [_Location_file]: null
      });
    },
    get C224() {
      return C[224] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 25,
        [_Location_line]: 851,
        [_Location_file]: null
      });
    },
    get C222() {
      return C[222] = dart.constList([C[223] || CT.C223, C[224] || CT.C224], widget_inspector._Location);
    },
    get C221() {
      return C[221] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[222] || CT.C222,
        [_Location_name]: null,
        [_Location_column]: 30,
        [_Location_line]: 849,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C225() {
      return C[225] = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 0.5,
        [OffsetBase__dx]: 0
      });
    },
    get C228() {
      return C[228] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "position",
        [_Location_column]: 25,
        [_Location_line]: 857,
        [_Location_file]: null
      });
    },
    get C229() {
      return C[229] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 25,
        [_Location_line]: 861,
        [_Location_file]: null
      });
    },
    get C227() {
      return C[227] = dart.constList([C[228] || CT.C228, C[229] || CT.C229], widget_inspector._Location);
    },
    get C226() {
      return C[226] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[227] || CT.C227,
        [_Location_name]: null,
        [_Location_column]: 30,
        [_Location_line]: 856,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C232() {
      return C[232] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "switchInCurve",
        [_Location_column]: 19,
        [_Location_line]: 839,
        [_Location_file]: null
      });
    },
    get C233() {
      return C[233] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "switchOutCurve",
        [_Location_column]: 19,
        [_Location_line]: 840,
        [_Location_file]: null
      });
    },
    get C234() {
      return C[234] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "duration",
        [_Location_column]: 19,
        [_Location_line]: 841,
        [_Location_file]: null
      });
    },
    get C235() {
      return C[235] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "transitionBuilder",
        [_Location_column]: 19,
        [_Location_line]: 842,
        [_Location_file]: null
      });
    },
    get C236() {
      return C[236] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 19,
        [_Location_line]: 865,
        [_Location_file]: null
      });
    },
    get C231() {
      return C[231] = dart.constList([C[232] || CT.C232, C[233] || CT.C233, C[234] || CT.C234, C[235] || CT.C235, C[236] || CT.C236], widget_inspector._Location);
    },
    get C230() {
      return C[230] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[231] || CT.C231,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 838,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C239() {
      return C[239] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 838,
        [_Location_file]: null
      });
    },
    get C238() {
      return C[238] = dart.constList([C[239] || CT.C239], widget_inspector._Location);
    },
    get C237() {
      return C[237] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[238] || CT.C238,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 837,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C242() {
      return C[242] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "curve",
        [_Location_column]: 15,
        [_Location_line]: 812,
        [_Location_file]: null
      });
    },
    get C243() {
      return C[243] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "duration",
        [_Location_column]: 15,
        [_Location_line]: 813,
        [_Location_file]: null
      });
    },
    get C244() {
      return C[244] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 15,
        [_Location_line]: 814,
        [_Location_file]: null
      });
    },
    get C245() {
      return C[245] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 15,
        [_Location_line]: 815,
        [_Location_file]: null
      });
    },
    get C246() {
      return C[246] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 15,
        [_Location_line]: 816,
        [_Location_file]: null
      });
    },
    get C247() {
      return C[247] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 837,
        [_Location_file]: null
      });
    },
    get C241() {
      return C[241] = dart.constList([C[242] || CT.C242, C[243] || CT.C243, C[244] || CT.C244, C[245] || CT.C245, C[246] || CT.C246, C[247] || CT.C247], widget_inspector._Location);
    },
    get C240() {
      return C[240] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[241] || CT.C241,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 811,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C250() {
      return C[250] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 13,
        [_Location_line]: 810,
        [_Location_file]: null
      });
    },
    get C251() {
      return C[251] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 811,
        [_Location_file]: null
      });
    },
    get C249() {
      return C[249] = dart.constList([C[250] || CT.C250, C[251] || CT.C251], widget_inspector._Location);
    },
    get C248() {
      return C[248] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[249] || CT.C249,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 809,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C252() {
      return C[252] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 1
      });
    },
    get C255() {
      return C[255] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 49,
        [_Location_line]: 904,
        [_Location_file]: null
      });
    },
    get C254() {
      return C[254] = dart.constList([C[255] || CT.C255], widget_inspector._Location);
    },
    get C253() {
      return C[253] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[254] || CT.C254,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 904,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C258() {
      return C[258] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 904,
        [_Location_file]: null
      });
    },
    get C259() {
      return C[259] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPressed",
        [_Location_column]: 11,
        [_Location_line]: 905,
        [_Location_file]: null
      });
    },
    get C257() {
      return C[257] = dart.constList([C[258] || CT.C258, C[259] || CT.C259], widget_inspector._Location);
    },
    get C256() {
      return C[256] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[257] || CT.C257,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 903,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C262() {
      return C[262] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 52,
        [_Location_line]: 910,
        [_Location_file]: null
      });
    },
    get C261() {
      return C[261] = dart.constList([C[262] || CT.C262], widget_inspector._Location);
    },
    get C260() {
      return C[260] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[261] || CT.C261,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 910,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C265() {
      return C[265] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 910,
        [_Location_file]: null
      });
    },
    get C266() {
      return C[266] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPressed",
        [_Location_column]: 11,
        [_Location_line]: 911,
        [_Location_file]: null
      });
    },
    get C264() {
      return C[264] = dart.constList([C[265] || CT.C265, C[266] || CT.C266], widget_inspector._Location);
    },
    get C263() {
      return C[263] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[264] || CT.C264,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 909,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C269() {
      return C[269] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 49,
        [_Location_line]: 920,
        [_Location_file]: null
      });
    },
    get C268() {
      return C[268] = dart.constList([C[269] || CT.C269], widget_inspector._Location);
    },
    get C267() {
      return C[267] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[268] || CT.C268,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 920,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C272() {
      return C[272] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 920,
        [_Location_file]: null
      });
    },
    get C273() {
      return C[273] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPressed",
        [_Location_column]: 11,
        [_Location_line]: 921,
        [_Location_file]: null
      });
    },
    get C271() {
      return C[271] = dart.constList([C[272] || CT.C272, C[273] || CT.C273], widget_inspector._Location);
    },
    get C270() {
      return C[270] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[271] || CT.C271,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 919,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C276() {
      return C[276] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 52,
        [_Location_line]: 926,
        [_Location_file]: null
      });
    },
    get C275() {
      return C[275] = dart.constList([C[276] || CT.C276], widget_inspector._Location);
    },
    get C274() {
      return C[274] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[275] || CT.C275,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 926,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C279() {
      return C[279] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 926,
        [_Location_file]: null
      });
    },
    get C280() {
      return C[280] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPressed",
        [_Location_column]: 11,
        [_Location_line]: 927,
        [_Location_file]: null
      });
    },
    get C278() {
      return C[278] = dart.constList([C[279] || CT.C279, C[280] || CT.C280], widget_inspector._Location);
    },
    get C277() {
      return C[277] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[278] || CT.C278,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 925,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
      });
    },
    get C281() {
      return C[281] = dart.const({
        __proto__: pin_code_fields.PinCodeFieldShape.prototype,
        [_name$]: "PinCodeFieldShape.box",
        index: 0
      });
    },
    get C282() {
      return C[282] = dart.const({
        __proto__: pin_code_fields.PinCodeFieldShape.prototype,
        [_name$]: "PinCodeFieldShape.circle",
        index: 2
      });
    },
    get C283() {
      return C[283] = dart.constList([C[281] || CT.C281, C[15] || CT.C15, C[282] || CT.C282], pin_code_fields.PinCodeFieldShape);
    },
    get C284() {
      return C[284] = dart.const({
        __proto__: pin_code_fields.ErrorAnimationType.prototype,
        [_name$]: "ErrorAnimationType.shake",
        index: 0
      });
    },
    get C285() {
      return C[285] = dart.constList([C[284] || CT.C284], pin_code_fields.ErrorAnimationType);
    },
    get C288() {
      return C[288] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shaderCallback",
        [_Location_column]: 23,
        [_Location_line]: 12,
        [_Location_file]: null
      });
    },
    get C289() {
      return C[289] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 62,
        [_Location_line]: 12,
        [_Location_file]: null
      });
    },
    get C287() {
      return C[287] = dart.constList([C[288] || CT.C288, C[289] || CT.C289], widget_inspector._Location);
    },
    get C286() {
      return C[286] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[287] || CT.C287,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 12,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/gradiented.dart"
      });
    }
  }, false);
  var C = Array(290).fill(void 0);
  var I = [
    "package:pin_code_fields/pin_code_fields.dart",
    "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/pin_code_fields-7.3.0/lib/src/pin_code_fields.dart"
  ];
  var _name$ = dart.privateName(pin_code_fields, "_name");
  pin_code_fields.HapticFeedbackTypes = class HapticFeedbackTypes extends core.Object {
    toString() {
      return this[_name$];
    }
  };
  (pin_code_fields.HapticFeedbackTypes.new = function(index, _name) {
    this.index = index;
    this[_name$] = _name;
    ;
  }).prototype = pin_code_fields.HapticFeedbackTypes.prototype;
  dart.addTypeTests(pin_code_fields.HapticFeedbackTypes);
  dart.addTypeCaches(pin_code_fields.HapticFeedbackTypes);
  dart.setLibraryUri(pin_code_fields.HapticFeedbackTypes, I[0]);
  dart.setFieldSignature(pin_code_fields.HapticFeedbackTypes, () => ({
    __proto__: dart.getFields(pin_code_fields.HapticFeedbackTypes.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(pin_code_fields.HapticFeedbackTypes, ['toString']);
  pin_code_fields.HapticFeedbackTypes.heavy = C[0] || CT.C0;
  pin_code_fields.HapticFeedbackTypes.light = C[1] || CT.C1;
  pin_code_fields.HapticFeedbackTypes.medium = C[2] || CT.C2;
  pin_code_fields.HapticFeedbackTypes.selection = C[3] || CT.C3;
  pin_code_fields.HapticFeedbackTypes.vibrate = C[4] || CT.C4;
  pin_code_fields.HapticFeedbackTypes.values = C[5] || CT.C5;
  pin_code_fields.AnimationType = class AnimationType extends core.Object {
    toString() {
      return this[_name$];
    }
  };
  (pin_code_fields.AnimationType.new = function(index, _name) {
    this.index = index;
    this[_name$] = _name;
    ;
  }).prototype = pin_code_fields.AnimationType.prototype;
  dart.addTypeTests(pin_code_fields.AnimationType);
  dart.addTypeCaches(pin_code_fields.AnimationType);
  dart.setLibraryUri(pin_code_fields.AnimationType, I[0]);
  dart.setFieldSignature(pin_code_fields.AnimationType, () => ({
    __proto__: dart.getFields(pin_code_fields.AnimationType.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(pin_code_fields.AnimationType, ['toString']);
  pin_code_fields.AnimationType.scale = C[6] || CT.C6;
  pin_code_fields.AnimationType.slide = C[7] || CT.C7;
  pin_code_fields.AnimationType.fade = C[8] || CT.C8;
  pin_code_fields.AnimationType.none = C[9] || CT.C9;
  pin_code_fields.AnimationType.values = C[10] || CT.C10;
  var dialogTitle$ = dart.privateName(pin_code_fields, "DialogConfig.dialogTitle");
  var dialogContent$ = dart.privateName(pin_code_fields, "DialogConfig.dialogContent");
  var affirmativeText$ = dart.privateName(pin_code_fields, "DialogConfig.affirmativeText");
  var negativeText$ = dart.privateName(pin_code_fields, "DialogConfig.negativeText");
  var platform$0 = dart.privateName(pin_code_fields, "DialogConfig.platform");
  var _name = dart.privateName(platform$, "_name");
  pin_code_fields.DialogConfig = class DialogConfig extends core.Object {
    get dialogTitle() {
      return this[dialogTitle$];
    }
    set dialogTitle(value) {
      super.dialogTitle = value;
    }
    get dialogContent() {
      return this[dialogContent$];
    }
    set dialogContent(value) {
      super.dialogContent = value;
    }
    get affirmativeText() {
      return this[affirmativeText$];
    }
    set affirmativeText(value) {
      super.affirmativeText = value;
    }
    get negativeText() {
      return this[negativeText$];
    }
    set negativeText(value) {
      super.negativeText = value;
    }
    get platform() {
      return this[platform$0];
    }
    set platform(value) {
      super.platform = value;
    }
    static new(opts) {
      let affirmativeText = opts && 'affirmativeText' in opts ? opts.affirmativeText : null;
      let dialogContent = opts && 'dialogContent' in opts ? opts.dialogContent : null;
      let dialogTitle = opts && 'dialogTitle' in opts ? opts.dialogTitle : null;
      let negativeText = opts && 'negativeText' in opts ? opts.negativeText : null;
      let platform = opts && 'platform' in opts ? opts.platform : null;
      return new pin_code_fields.DialogConfig._internal({affirmativeText: affirmativeText == null ? "Paste" : affirmativeText, dialogContent: dialogContent == null ? "Do you want to paste this code " : dialogContent, dialogTitle: dialogTitle == null ? "Paste Code" : dialogTitle, negativeText: negativeText == null ? "Cancel" : negativeText, platform: platform == null ? platform$.Platform.other : platform});
    }
  };
  (pin_code_fields.DialogConfig._internal = function(opts) {
    let dialogContent = opts && 'dialogContent' in opts ? opts.dialogContent : null;
    let dialogTitle = opts && 'dialogTitle' in opts ? opts.dialogTitle : null;
    let affirmativeText = opts && 'affirmativeText' in opts ? opts.affirmativeText : null;
    let negativeText = opts && 'negativeText' in opts ? opts.negativeText : null;
    let platform = opts && 'platform' in opts ? opts.platform : C[11] || CT.C11;
    this[dialogContent$] = dialogContent;
    this[dialogTitle$] = dialogTitle;
    this[affirmativeText$] = affirmativeText;
    this[negativeText$] = negativeText;
    this[platform$0] = platform;
    ;
  }).prototype = pin_code_fields.DialogConfig.prototype;
  dart.addTypeTests(pin_code_fields.DialogConfig);
  dart.addTypeCaches(pin_code_fields.DialogConfig);
  dart.setLibraryUri(pin_code_fields.DialogConfig, I[0]);
  dart.setFieldSignature(pin_code_fields.DialogConfig, () => ({
    __proto__: dart.getFields(pin_code_fields.DialogConfig.__proto__),
    dialogTitle: dart.finalFieldType(dart.nullable(core.String)),
    dialogContent: dart.finalFieldType(dart.nullable(core.String)),
    affirmativeText: dart.finalFieldType(dart.nullable(core.String)),
    negativeText: dart.finalFieldType(dart.nullable(core.String)),
    platform: dart.finalFieldType(platform$.Platform)
  }));
  var activeColor$ = dart.privateName(pin_code_fields, "PinTheme.activeColor");
  var selectedColor$ = dart.privateName(pin_code_fields, "PinTheme.selectedColor");
  var inactiveColor$ = dart.privateName(pin_code_fields, "PinTheme.inactiveColor");
  var disabledColor$ = dart.privateName(pin_code_fields, "PinTheme.disabledColor");
  var activeFillColor$ = dart.privateName(pin_code_fields, "PinTheme.activeFillColor");
  var selectedFillColor$ = dart.privateName(pin_code_fields, "PinTheme.selectedFillColor");
  var inactiveFillColor$ = dart.privateName(pin_code_fields, "PinTheme.inactiveFillColor");
  var errorBorderColor$ = dart.privateName(pin_code_fields, "PinTheme.errorBorderColor");
  var borderRadius$ = dart.privateName(pin_code_fields, "PinTheme.borderRadius");
  var fieldHeight$ = dart.privateName(pin_code_fields, "PinTheme.fieldHeight");
  var fieldWidth$ = dart.privateName(pin_code_fields, "PinTheme.fieldWidth");
  var borderWidth$ = dart.privateName(pin_code_fields, "PinTheme.borderWidth");
  var shape$ = dart.privateName(pin_code_fields, "PinTheme.shape");
  var fieldOuterPadding$ = dart.privateName(pin_code_fields, "PinTheme.fieldOuterPadding");
  var Radius_y = dart.privateName(ui, "Radius.y");
  var Radius_x = dart.privateName(ui, "Radius.x");
  var BorderRadius_bottomRight = dart.privateName(border_radius, "BorderRadius.bottomRight");
  var BorderRadius_bottomLeft = dart.privateName(border_radius, "BorderRadius.bottomLeft");
  var BorderRadius_topRight = dart.privateName(border_radius, "BorderRadius.topRight");
  var BorderRadius_topLeft = dart.privateName(border_radius, "BorderRadius.topLeft");
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  var Color_value = dart.privateName(ui, "Color.value");
  var ColorSwatch__swatch = dart.privateName(colors$, "ColorSwatch._swatch");
  pin_code_fields.PinTheme = class PinTheme extends core.Object {
    get activeColor() {
      return this[activeColor$];
    }
    set activeColor(value) {
      super.activeColor = value;
    }
    get selectedColor() {
      return this[selectedColor$];
    }
    set selectedColor(value) {
      super.selectedColor = value;
    }
    get inactiveColor() {
      return this[inactiveColor$];
    }
    set inactiveColor(value) {
      super.inactiveColor = value;
    }
    get disabledColor() {
      return this[disabledColor$];
    }
    set disabledColor(value) {
      super.disabledColor = value;
    }
    get activeFillColor() {
      return this[activeFillColor$];
    }
    set activeFillColor(value) {
      super.activeFillColor = value;
    }
    get selectedFillColor() {
      return this[selectedFillColor$];
    }
    set selectedFillColor(value) {
      super.selectedFillColor = value;
    }
    get inactiveFillColor() {
      return this[inactiveFillColor$];
    }
    set inactiveFillColor(value) {
      super.inactiveFillColor = value;
    }
    get errorBorderColor() {
      return this[errorBorderColor$];
    }
    set errorBorderColor(value) {
      super.errorBorderColor = value;
    }
    get borderRadius() {
      return this[borderRadius$];
    }
    set borderRadius(value) {
      super.borderRadius = value;
    }
    get fieldHeight() {
      return this[fieldHeight$];
    }
    set fieldHeight(value) {
      super.fieldHeight = value;
    }
    get fieldWidth() {
      return this[fieldWidth$];
    }
    set fieldWidth(value) {
      super.fieldWidth = value;
    }
    get borderWidth() {
      return this[borderWidth$];
    }
    set borderWidth(value) {
      super.borderWidth = value;
    }
    get shape() {
      return this[shape$];
    }
    set shape(value) {
      super.shape = value;
    }
    get fieldOuterPadding() {
      return this[fieldOuterPadding$];
    }
    set fieldOuterPadding(value) {
      super.fieldOuterPadding = value;
    }
    static new(opts) {
      let activeColor = opts && 'activeColor' in opts ? opts.activeColor : null;
      let selectedColor = opts && 'selectedColor' in opts ? opts.selectedColor : null;
      let inactiveColor = opts && 'inactiveColor' in opts ? opts.inactiveColor : null;
      let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
      let activeFillColor = opts && 'activeFillColor' in opts ? opts.activeFillColor : null;
      let selectedFillColor = opts && 'selectedFillColor' in opts ? opts.selectedFillColor : null;
      let inactiveFillColor = opts && 'inactiveFillColor' in opts ? opts.inactiveFillColor : null;
      let errorBorderColor = opts && 'errorBorderColor' in opts ? opts.errorBorderColor : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
      let fieldHeight = opts && 'fieldHeight' in opts ? opts.fieldHeight : null;
      let fieldWidth = opts && 'fieldWidth' in opts ? opts.fieldWidth : null;
      let borderWidth = opts && 'borderWidth' in opts ? opts.borderWidth : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let fieldOuterPadding = opts && 'fieldOuterPadding' in opts ? opts.fieldOuterPadding : null;
      let defaultValues = new pin_code_fields.PinTheme.defaults();
      return new pin_code_fields.PinTheme.defaults({activeColor: activeColor == null ? defaultValues.activeColor : activeColor, activeFillColor: activeFillColor == null ? defaultValues.activeFillColor : activeFillColor, borderRadius: borderRadius == null ? defaultValues.borderRadius : borderRadius, borderWidth: borderWidth == null ? defaultValues.borderWidth : borderWidth, disabledColor: disabledColor == null ? defaultValues.disabledColor : disabledColor, fieldHeight: fieldHeight == null ? defaultValues.fieldHeight : fieldHeight, fieldWidth: fieldWidth == null ? defaultValues.fieldWidth : fieldWidth, inactiveColor: inactiveColor == null ? defaultValues.inactiveColor : inactiveColor, inactiveFillColor: inactiveFillColor == null ? defaultValues.inactiveFillColor : inactiveFillColor, errorBorderColor: errorBorderColor == null ? defaultValues.errorBorderColor : errorBorderColor, selectedColor: selectedColor == null ? defaultValues.selectedColor : selectedColor, selectedFillColor: selectedFillColor == null ? defaultValues.selectedFillColor : selectedFillColor, shape: shape == null ? defaultValues.shape : shape, fieldOuterPadding: fieldOuterPadding == null ? defaultValues.fieldOuterPadding : fieldOuterPadding});
    }
  };
  (pin_code_fields.PinTheme.defaults = function(opts) {
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : C[12] || CT.C12;
    let fieldHeight = opts && 'fieldHeight' in opts ? opts.fieldHeight : 50;
    let fieldWidth = opts && 'fieldWidth' in opts ? opts.fieldWidth : 40;
    let borderWidth = opts && 'borderWidth' in opts ? opts.borderWidth : 2;
    let fieldOuterPadding = opts && 'fieldOuterPadding' in opts ? opts.fieldOuterPadding : C[14] || CT.C14;
    let shape = opts && 'shape' in opts ? opts.shape : C[15] || CT.C15;
    let activeColor = opts && 'activeColor' in opts ? opts.activeColor : C[16] || CT.C16;
    let selectedColor = opts && 'selectedColor' in opts ? opts.selectedColor : C[28] || CT.C28;
    let inactiveColor = opts && 'inactiveColor' in opts ? opts.inactiveColor : C[40] || CT.C40;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : C[52] || CT.C52;
    let activeFillColor = opts && 'activeFillColor' in opts ? opts.activeFillColor : C[16] || CT.C16;
    let selectedFillColor = opts && 'selectedFillColor' in opts ? opts.selectedFillColor : C[28] || CT.C28;
    let inactiveFillColor = opts && 'inactiveFillColor' in opts ? opts.inactiveFillColor : C[40] || CT.C40;
    let errorBorderColor = opts && 'errorBorderColor' in opts ? opts.errorBorderColor : C[66] || CT.C66;
    this[borderRadius$] = borderRadius;
    this[fieldHeight$] = fieldHeight;
    this[fieldWidth$] = fieldWidth;
    this[borderWidth$] = borderWidth;
    this[fieldOuterPadding$] = fieldOuterPadding;
    this[shape$] = shape;
    this[activeColor$] = activeColor;
    this[selectedColor$] = selectedColor;
    this[inactiveColor$] = inactiveColor;
    this[disabledColor$] = disabledColor;
    this[activeFillColor$] = activeFillColor;
    this[selectedFillColor$] = selectedFillColor;
    this[inactiveFillColor$] = inactiveFillColor;
    this[errorBorderColor$] = errorBorderColor;
    ;
  }).prototype = pin_code_fields.PinTheme.prototype;
  dart.addTypeTests(pin_code_fields.PinTheme);
  dart.addTypeCaches(pin_code_fields.PinTheme);
  dart.setLibraryUri(pin_code_fields.PinTheme, I[0]);
  dart.setFieldSignature(pin_code_fields.PinTheme, () => ({
    __proto__: dart.getFields(pin_code_fields.PinTheme.__proto__),
    activeColor: dart.finalFieldType(ui.Color),
    selectedColor: dart.finalFieldType(ui.Color),
    inactiveColor: dart.finalFieldType(ui.Color),
    disabledColor: dart.finalFieldType(ui.Color),
    activeFillColor: dart.finalFieldType(ui.Color),
    selectedFillColor: dart.finalFieldType(ui.Color),
    inactiveFillColor: dart.finalFieldType(ui.Color),
    errorBorderColor: dart.finalFieldType(ui.Color),
    borderRadius: dart.finalFieldType(border_radius.BorderRadius),
    fieldHeight: dart.finalFieldType(core.double),
    fieldWidth: dart.finalFieldType(core.double),
    borderWidth: dart.finalFieldType(core.double),
    shape: dart.finalFieldType(pin_code_fields.PinCodeFieldShape),
    fieldOuterPadding: dart.finalFieldType(edge_insets.EdgeInsetsGeometry)
  }));
  var appContext$ = dart.privateName(pin_code_fields, "PinCodeTextField.appContext");
  var boxShadows$ = dart.privateName(pin_code_fields, "PinCodeTextField.boxShadows");
  var length$ = dart.privateName(pin_code_fields, "PinCodeTextField.length");
  var obscureText$ = dart.privateName(pin_code_fields, "PinCodeTextField.obscureText");
  var obscuringCharacter$ = dart.privateName(pin_code_fields, "PinCodeTextField.obscuringCharacter");
  var obscuringWidget$ = dart.privateName(pin_code_fields, "PinCodeTextField.obscuringWidget");
  var useHapticFeedback$ = dart.privateName(pin_code_fields, "PinCodeTextField.useHapticFeedback");
  var hapticFeedbackTypes$ = dart.privateName(pin_code_fields, "PinCodeTextField.hapticFeedbackTypes");
  var blinkWhenObscuring$ = dart.privateName(pin_code_fields, "PinCodeTextField.blinkWhenObscuring");
  var blinkDuration$ = dart.privateName(pin_code_fields, "PinCodeTextField.blinkDuration");
  var onChanged$ = dart.privateName(pin_code_fields, "PinCodeTextField.onChanged");
  var onCompleted$ = dart.privateName(pin_code_fields, "PinCodeTextField.onCompleted");
  var onSubmitted$ = dart.privateName(pin_code_fields, "PinCodeTextField.onSubmitted");
  var textStyle$ = dart.privateName(pin_code_fields, "PinCodeTextField.textStyle");
  var pastedTextStyle$ = dart.privateName(pin_code_fields, "PinCodeTextField.pastedTextStyle");
  var backgroundColor$ = dart.privateName(pin_code_fields, "PinCodeTextField.backgroundColor");
  var mainAxisAlignment$ = dart.privateName(pin_code_fields, "PinCodeTextField.mainAxisAlignment");
  var animationType$ = dart.privateName(pin_code_fields, "PinCodeTextField.animationType");
  var animationDuration$ = dart.privateName(pin_code_fields, "PinCodeTextField.animationDuration");
  var animationCurve$ = dart.privateName(pin_code_fields, "PinCodeTextField.animationCurve");
  var keyboardType$ = dart.privateName(pin_code_fields, "PinCodeTextField.keyboardType");
  var autoFocus$ = dart.privateName(pin_code_fields, "PinCodeTextField.autoFocus");
  var focusNode$ = dart.privateName(pin_code_fields, "PinCodeTextField.focusNode");
  var inputFormatters$ = dart.privateName(pin_code_fields, "PinCodeTextField.inputFormatters");
  var enabled$ = dart.privateName(pin_code_fields, "PinCodeTextField.enabled");
  var controller$ = dart.privateName(pin_code_fields, "PinCodeTextField.controller");
  var enableActiveFill$ = dart.privateName(pin_code_fields, "PinCodeTextField.enableActiveFill");
  var autoDismissKeyboard$ = dart.privateName(pin_code_fields, "PinCodeTextField.autoDismissKeyboard");
  var autoDisposeControllers$ = dart.privateName(pin_code_fields, "PinCodeTextField.autoDisposeControllers");
  var textCapitalization$ = dart.privateName(pin_code_fields, "PinCodeTextField.textCapitalization");
  var textInputAction$ = dart.privateName(pin_code_fields, "PinCodeTextField.textInputAction");
  var errorAnimationController$ = dart.privateName(pin_code_fields, "PinCodeTextField.errorAnimationController");
  var beforeTextPaste$ = dart.privateName(pin_code_fields, "PinCodeTextField.beforeTextPaste");
  var onTap$ = dart.privateName(pin_code_fields, "PinCodeTextField.onTap");
  var dialogConfig$ = dart.privateName(pin_code_fields, "PinCodeTextField.dialogConfig");
  var pinTheme$ = dart.privateName(pin_code_fields, "PinCodeTextField.pinTheme");
  var keyboardAppearance$ = dart.privateName(pin_code_fields, "PinCodeTextField.keyboardAppearance");
  var validator$ = dart.privateName(pin_code_fields, "PinCodeTextField.validator");
  var onSaved$ = dart.privateName(pin_code_fields, "PinCodeTextField.onSaved");
  var autovalidateMode$ = dart.privateName(pin_code_fields, "PinCodeTextField.autovalidateMode");
  var errorTextSpace$ = dart.privateName(pin_code_fields, "PinCodeTextField.errorTextSpace");
  var enablePinAutofill$ = dart.privateName(pin_code_fields, "PinCodeTextField.enablePinAutofill");
  var errorAnimationDuration$ = dart.privateName(pin_code_fields, "PinCodeTextField.errorAnimationDuration");
  var showCursor$ = dart.privateName(pin_code_fields, "PinCodeTextField.showCursor");
  var cursorColor$ = dart.privateName(pin_code_fields, "PinCodeTextField.cursorColor");
  var cursorWidth$ = dart.privateName(pin_code_fields, "PinCodeTextField.cursorWidth");
  var cursorHeight$ = dart.privateName(pin_code_fields, "PinCodeTextField.cursorHeight");
  var onAutoFillDisposeAction$ = dart.privateName(pin_code_fields, "PinCodeTextField.onAutoFillDisposeAction");
  var useExternalAutoFillGroup$ = dart.privateName(pin_code_fields, "PinCodeTextField.useExternalAutoFillGroup");
  var hintCharacter$ = dart.privateName(pin_code_fields, "PinCodeTextField.hintCharacter");
  var hintStyle$ = dart.privateName(pin_code_fields, "PinCodeTextField.hintStyle");
  var scrollPadding$ = dart.privateName(pin_code_fields, "PinCodeTextField.scrollPadding");
  var textGradient$ = dart.privateName(pin_code_fields, "PinCodeTextField.textGradient");
  var readOnly$ = dart.privateName(pin_code_fields, "PinCodeTextField.readOnly");
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var _name$0 = dart.privateName(flex, "_name");
  var Cubic_d = dart.privateName(curves, "Cubic.d");
  var Cubic_c = dart.privateName(curves, "Cubic.c");
  var Cubic_b = dart.privateName(curves, "Cubic.b");
  var Cubic_a = dart.privateName(curves, "Cubic.a");
  var TextInputType_decimal = dart.privateName(text_input, "TextInputType.decimal");
  var TextInputType_signed = dart.privateName(text_input, "TextInputType.signed");
  var TextInputType_index = dart.privateName(text_input, "TextInputType.index");
  var _name$1 = dart.privateName(text_input, "_name");
  var _name$2 = dart.privateName(form, "_name");
  var _name$3 = dart.privateName(autofill, "_name");
  pin_code_fields.PinCodeTextField = class PinCodeTextField extends framework.StatefulWidget {
    get appContext() {
      return this[appContext$];
    }
    set appContext(value) {
      super.appContext = value;
    }
    get boxShadows() {
      return this[boxShadows$];
    }
    set boxShadows(value) {
      super.boxShadows = value;
    }
    get length() {
      return this[length$];
    }
    set length(value) {
      super.length = value;
    }
    get obscureText() {
      return this[obscureText$];
    }
    set obscureText(value) {
      super.obscureText = value;
    }
    get obscuringCharacter() {
      return this[obscuringCharacter$];
    }
    set obscuringCharacter(value) {
      super.obscuringCharacter = value;
    }
    get obscuringWidget() {
      return this[obscuringWidget$];
    }
    set obscuringWidget(value) {
      super.obscuringWidget = value;
    }
    get useHapticFeedback() {
      return this[useHapticFeedback$];
    }
    set useHapticFeedback(value) {
      super.useHapticFeedback = value;
    }
    get hapticFeedbackTypes() {
      return this[hapticFeedbackTypes$];
    }
    set hapticFeedbackTypes(value) {
      super.hapticFeedbackTypes = value;
    }
    get blinkWhenObscuring() {
      return this[blinkWhenObscuring$];
    }
    set blinkWhenObscuring(value) {
      super.blinkWhenObscuring = value;
    }
    get blinkDuration() {
      return this[blinkDuration$];
    }
    set blinkDuration(value) {
      super.blinkDuration = value;
    }
    get onChanged() {
      return this[onChanged$];
    }
    set onChanged(value) {
      super.onChanged = value;
    }
    get onCompleted() {
      return this[onCompleted$];
    }
    set onCompleted(value) {
      super.onCompleted = value;
    }
    get onSubmitted() {
      return this[onSubmitted$];
    }
    set onSubmitted(value) {
      super.onSubmitted = value;
    }
    get textStyle() {
      return this[textStyle$];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    get pastedTextStyle() {
      return this[pastedTextStyle$];
    }
    set pastedTextStyle(value) {
      super.pastedTextStyle = value;
    }
    get backgroundColor() {
      return this[backgroundColor$];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get mainAxisAlignment() {
      return this[mainAxisAlignment$];
    }
    set mainAxisAlignment(value) {
      super.mainAxisAlignment = value;
    }
    get animationType() {
      return this[animationType$];
    }
    set animationType(value) {
      super.animationType = value;
    }
    get animationDuration() {
      return this[animationDuration$];
    }
    set animationDuration(value) {
      super.animationDuration = value;
    }
    get animationCurve() {
      return this[animationCurve$];
    }
    set animationCurve(value) {
      super.animationCurve = value;
    }
    get keyboardType() {
      return this[keyboardType$];
    }
    set keyboardType(value) {
      super.keyboardType = value;
    }
    get autoFocus() {
      return this[autoFocus$];
    }
    set autoFocus(value) {
      super.autoFocus = value;
    }
    get focusNode() {
      return this[focusNode$];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get inputFormatters() {
      return this[inputFormatters$];
    }
    set inputFormatters(value) {
      super.inputFormatters = value;
    }
    get enabled() {
      return this[enabled$];
    }
    set enabled(value) {
      super.enabled = value;
    }
    get controller() {
      return this[controller$];
    }
    set controller(value) {
      super.controller = value;
    }
    get enableActiveFill() {
      return this[enableActiveFill$];
    }
    set enableActiveFill(value) {
      super.enableActiveFill = value;
    }
    get autoDismissKeyboard() {
      return this[autoDismissKeyboard$];
    }
    set autoDismissKeyboard(value) {
      super.autoDismissKeyboard = value;
    }
    get autoDisposeControllers() {
      return this[autoDisposeControllers$];
    }
    set autoDisposeControllers(value) {
      super.autoDisposeControllers = value;
    }
    get textCapitalization() {
      return this[textCapitalization$];
    }
    set textCapitalization(value) {
      super.textCapitalization = value;
    }
    get textInputAction() {
      return this[textInputAction$];
    }
    set textInputAction(value) {
      super.textInputAction = value;
    }
    get errorAnimationController() {
      return this[errorAnimationController$];
    }
    set errorAnimationController(value) {
      super.errorAnimationController = value;
    }
    get beforeTextPaste() {
      return this[beforeTextPaste$];
    }
    set beforeTextPaste(value) {
      super.beforeTextPaste = value;
    }
    get onTap() {
      return this[onTap$];
    }
    set onTap(value) {
      super.onTap = value;
    }
    get dialogConfig() {
      return this[dialogConfig$];
    }
    set dialogConfig(value) {
      super.dialogConfig = value;
    }
    get pinTheme() {
      return this[pinTheme$];
    }
    set pinTheme(value) {
      super.pinTheme = value;
    }
    get keyboardAppearance() {
      return this[keyboardAppearance$];
    }
    set keyboardAppearance(value) {
      super.keyboardAppearance = value;
    }
    get validator() {
      return this[validator$];
    }
    set validator(value) {
      super.validator = value;
    }
    get onSaved() {
      return this[onSaved$];
    }
    set onSaved(value) {
      super.onSaved = value;
    }
    get autovalidateMode() {
      return this[autovalidateMode$];
    }
    set autovalidateMode(value) {
      super.autovalidateMode = value;
    }
    get errorTextSpace() {
      return this[errorTextSpace$];
    }
    set errorTextSpace(value) {
      super.errorTextSpace = value;
    }
    get enablePinAutofill() {
      return this[enablePinAutofill$];
    }
    set enablePinAutofill(value) {
      super.enablePinAutofill = value;
    }
    get errorAnimationDuration() {
      return this[errorAnimationDuration$];
    }
    set errorAnimationDuration(value) {
      super.errorAnimationDuration = value;
    }
    get showCursor() {
      return this[showCursor$];
    }
    set showCursor(value) {
      super.showCursor = value;
    }
    get cursorColor() {
      return this[cursorColor$];
    }
    set cursorColor(value) {
      super.cursorColor = value;
    }
    get cursorWidth() {
      return this[cursorWidth$];
    }
    set cursorWidth(value) {
      super.cursorWidth = value;
    }
    get cursorHeight() {
      return this[cursorHeight$];
    }
    set cursorHeight(value) {
      super.cursorHeight = value;
    }
    get onAutoFillDisposeAction() {
      return this[onAutoFillDisposeAction$];
    }
    set onAutoFillDisposeAction(value) {
      super.onAutoFillDisposeAction = value;
    }
    get useExternalAutoFillGroup() {
      return this[useExternalAutoFillGroup$];
    }
    set useExternalAutoFillGroup(value) {
      super.useExternalAutoFillGroup = value;
    }
    get hintCharacter() {
      return this[hintCharacter$];
    }
    set hintCharacter(value) {
      super.hintCharacter = value;
    }
    get hintStyle() {
      return this[hintStyle$];
    }
    set hintStyle(value) {
      super.hintStyle = value;
    }
    get scrollPadding() {
      return this[scrollPadding$];
    }
    set scrollPadding(value) {
      super.scrollPadding = value;
    }
    get textGradient() {
      return this[textGradient$];
    }
    set textGradient(value) {
      super.textGradient = value;
    }
    get readOnly() {
      return this[readOnly$];
    }
    set readOnly(value) {
      super.readOnly = value;
    }
    createState() {
      return new pin_code_fields._PinCodeTextFieldState.new();
    }
  };
  (pin_code_fields.PinCodeTextField.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let appContext = opts && 'appContext' in opts ? opts.appContext : null;
    let length = opts && 'length' in opts ? opts.length : null;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let obscureText = opts && 'obscureText' in opts ? opts.obscureText : false;
    let obscuringCharacter = opts && 'obscuringCharacter' in opts ? opts.obscuringCharacter : "●";
    let obscuringWidget = opts && 'obscuringWidget' in opts ? opts.obscuringWidget : null;
    let blinkWhenObscuring = opts && 'blinkWhenObscuring' in opts ? opts.blinkWhenObscuring : false;
    let blinkDuration = opts && 'blinkDuration' in opts ? opts.blinkDuration : C[72] || CT.C72;
    let onChanged = opts && 'onChanged' in opts ? opts.onChanged : null;
    let onCompleted = opts && 'onCompleted' in opts ? opts.onCompleted : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let mainAxisAlignment = opts && 'mainAxisAlignment' in opts ? opts.mainAxisAlignment : C[73] || CT.C73;
    let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : C[74] || CT.C74;
    let animationCurve = opts && 'animationCurve' in opts ? opts.animationCurve : C[75] || CT.C75;
    let animationType = opts && 'animationType' in opts ? opts.animationType : C[7] || CT.C7;
    let keyboardType = opts && 'keyboardType' in opts ? opts.keyboardType : C[76] || CT.C76;
    let autoFocus = opts && 'autoFocus' in opts ? opts.autoFocus : false;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let enabled = opts && 'enabled' in opts ? opts.enabled : true;
    let inputFormatters = opts && 'inputFormatters' in opts ? opts.inputFormatters : C[77] || CT.C77;
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    let useHapticFeedback = opts && 'useHapticFeedback' in opts ? opts.useHapticFeedback : false;
    let hapticFeedbackTypes = opts && 'hapticFeedbackTypes' in opts ? opts.hapticFeedbackTypes : C[1] || CT.C1;
    let pastedTextStyle = opts && 'pastedTextStyle' in opts ? opts.pastedTextStyle : null;
    let enableActiveFill = opts && 'enableActiveFill' in opts ? opts.enableActiveFill : false;
    let textCapitalization = opts && 'textCapitalization' in opts ? opts.textCapitalization : C[78] || CT.C78;
    let textInputAction = opts && 'textInputAction' in opts ? opts.textInputAction : C[79] || CT.C79;
    let autoDismissKeyboard = opts && 'autoDismissKeyboard' in opts ? opts.autoDismissKeyboard : true;
    let autoDisposeControllers = opts && 'autoDisposeControllers' in opts ? opts.autoDisposeControllers : true;
    let onSubmitted = opts && 'onSubmitted' in opts ? opts.onSubmitted : null;
    let errorAnimationController = opts && 'errorAnimationController' in opts ? opts.errorAnimationController : null;
    let beforeTextPaste = opts && 'beforeTextPaste' in opts ? opts.beforeTextPaste : null;
    let dialogConfig = opts && 'dialogConfig' in opts ? opts.dialogConfig : null;
    let pinTheme = opts && 'pinTheme' in opts ? opts.pinTheme : C[80] || CT.C80;
    let keyboardAppearance = opts && 'keyboardAppearance' in opts ? opts.keyboardAppearance : null;
    let validator = opts && 'validator' in opts ? opts.validator : null;
    let onSaved = opts && 'onSaved' in opts ? opts.onSaved : null;
    let autovalidateMode = opts && 'autovalidateMode' in opts ? opts.autovalidateMode : C[81] || CT.C81;
    let errorTextSpace = opts && 'errorTextSpace' in opts ? opts.errorTextSpace : 16;
    let enablePinAutofill = opts && 'enablePinAutofill' in opts ? opts.enablePinAutofill : true;
    let errorAnimationDuration = opts && 'errorAnimationDuration' in opts ? opts.errorAnimationDuration : 500;
    let boxShadows = opts && 'boxShadows' in opts ? opts.boxShadows : null;
    let showCursor = opts && 'showCursor' in opts ? opts.showCursor : true;
    let cursorColor = opts && 'cursorColor' in opts ? opts.cursorColor : null;
    let cursorWidth = opts && 'cursorWidth' in opts ? opts.cursorWidth : 2;
    let cursorHeight = opts && 'cursorHeight' in opts ? opts.cursorHeight : null;
    let hintCharacter = opts && 'hintCharacter' in opts ? opts.hintCharacter : null;
    let hintStyle = opts && 'hintStyle' in opts ? opts.hintStyle : null;
    let textGradient = opts && 'textGradient' in opts ? opts.textGradient : null;
    let readOnly = opts && 'readOnly' in opts ? opts.readOnly : false;
    let onAutoFillDisposeAction = opts && 'onAutoFillDisposeAction' in opts ? opts.onAutoFillDisposeAction : C[82] || CT.C82;
    let useExternalAutoFillGroup = opts && 'useExternalAutoFillGroup' in opts ? opts.useExternalAutoFillGroup : false;
    let scrollPadding = opts && 'scrollPadding' in opts ? opts.scrollPadding : C[83] || CT.C83;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[appContext$] = appContext;
    this[length$] = length;
    this[controller$] = controller;
    this[obscureText$] = obscureText;
    this[obscuringCharacter$] = obscuringCharacter;
    this[obscuringWidget$] = obscuringWidget;
    this[blinkWhenObscuring$] = blinkWhenObscuring;
    this[blinkDuration$] = blinkDuration;
    this[onChanged$] = onChanged;
    this[onCompleted$] = onCompleted;
    this[backgroundColor$] = backgroundColor;
    this[mainAxisAlignment$] = mainAxisAlignment;
    this[animationDuration$] = animationDuration;
    this[animationCurve$] = animationCurve;
    this[animationType$] = animationType;
    this[keyboardType$] = keyboardType;
    this[autoFocus$] = autoFocus;
    this[focusNode$] = focusNode;
    this[onTap$] = onTap;
    this[enabled$] = enabled;
    this[inputFormatters$] = inputFormatters;
    this[textStyle$] = textStyle;
    this[useHapticFeedback$] = useHapticFeedback;
    this[hapticFeedbackTypes$] = hapticFeedbackTypes;
    this[pastedTextStyle$] = pastedTextStyle;
    this[enableActiveFill$] = enableActiveFill;
    this[textCapitalization$] = textCapitalization;
    this[textInputAction$] = textInputAction;
    this[autoDismissKeyboard$] = autoDismissKeyboard;
    this[autoDisposeControllers$] = autoDisposeControllers;
    this[onSubmitted$] = onSubmitted;
    this[errorAnimationController$] = errorAnimationController;
    this[beforeTextPaste$] = beforeTextPaste;
    this[dialogConfig$] = dialogConfig;
    this[pinTheme$] = pinTheme;
    this[keyboardAppearance$] = keyboardAppearance;
    this[validator$] = validator;
    this[onSaved$] = onSaved;
    this[autovalidateMode$] = autovalidateMode;
    this[errorTextSpace$] = errorTextSpace;
    this[enablePinAutofill$] = enablePinAutofill;
    this[errorAnimationDuration$] = errorAnimationDuration;
    this[boxShadows$] = boxShadows;
    this[showCursor$] = showCursor;
    this[cursorColor$] = cursorColor;
    this[cursorWidth$] = cursorWidth;
    this[cursorHeight$] = cursorHeight;
    this[hintCharacter$] = hintCharacter;
    this[hintStyle$] = hintStyle;
    this[textGradient$] = textGradient;
    this[readOnly$] = readOnly;
    this[onAutoFillDisposeAction$] = onAutoFillDisposeAction;
    this[useExternalAutoFillGroup$] = useExternalAutoFillGroup;
    this[scrollPadding$] = scrollPadding;
    if (!obscuringCharacter[$isNotEmpty]) dart.assertFailed(null, I[1], 253, 16, "obscuringCharacter.isNotEmpty");
    pin_code_fields.PinCodeTextField.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = pin_code_fields.PinCodeTextField.prototype;
  dart.addTypeTests(pin_code_fields.PinCodeTextField);
  dart.addTypeCaches(pin_code_fields.PinCodeTextField);
  dart.setMethodSignature(pin_code_fields.PinCodeTextField, () => ({
    __proto__: dart.getMethods(pin_code_fields.PinCodeTextField.__proto__),
    createState: dart.fnType(pin_code_fields._PinCodeTextFieldState, [])
  }));
  dart.setLibraryUri(pin_code_fields.PinCodeTextField, I[0]);
  dart.setFieldSignature(pin_code_fields.PinCodeTextField, () => ({
    __proto__: dart.getFields(pin_code_fields.PinCodeTextField.__proto__),
    appContext: dart.finalFieldType(framework.BuildContext),
    boxShadows: dart.finalFieldType(dart.nullable(core.List$(box_shadow.BoxShadow))),
    length: dart.finalFieldType(core.int),
    obscureText: dart.finalFieldType(core.bool),
    obscuringCharacter: dart.finalFieldType(core.String),
    obscuringWidget: dart.finalFieldType(dart.nullable(framework.Widget)),
    useHapticFeedback: dart.finalFieldType(core.bool),
    hapticFeedbackTypes: dart.finalFieldType(pin_code_fields.HapticFeedbackTypes),
    blinkWhenObscuring: dart.finalFieldType(core.bool),
    blinkDuration: dart.finalFieldType(core.Duration),
    onChanged: dart.finalFieldType(dart.fnType(dart.void, [core.String])),
    onCompleted: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.String]))),
    onSubmitted: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.String]))),
    textStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    pastedTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    mainAxisAlignment: dart.finalFieldType(flex.MainAxisAlignment),
    animationType: dart.finalFieldType(pin_code_fields.AnimationType),
    animationDuration: dart.finalFieldType(core.Duration),
    animationCurve: dart.finalFieldType(curves.Curve),
    keyboardType: dart.finalFieldType(text_input.TextInputType),
    autoFocus: dart.finalFieldType(core.bool),
    focusNode: dart.finalFieldType(dart.nullable(focus_manager.FocusNode)),
    inputFormatters: dart.finalFieldType(core.List$(text_formatter.TextInputFormatter)),
    enabled: dart.finalFieldType(core.bool),
    controller: dart.finalFieldType(dart.nullable(editable_text.TextEditingController)),
    enableActiveFill: dart.finalFieldType(core.bool),
    autoDismissKeyboard: dart.finalFieldType(core.bool),
    autoDisposeControllers: dart.finalFieldType(core.bool),
    textCapitalization: dart.finalFieldType(text_input.TextCapitalization),
    textInputAction: dart.finalFieldType(text_input.TextInputAction),
    errorAnimationController: dart.finalFieldType(dart.nullable(async.StreamController$(pin_code_fields.ErrorAnimationType))),
    beforeTextPaste: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [dart.nullable(core.String)]))),
    onTap: dart.finalFieldType(dart.nullable(core.Function)),
    dialogConfig: dart.finalFieldType(dart.nullable(pin_code_fields.DialogConfig)),
    pinTheme: dart.finalFieldType(pin_code_fields.PinTheme),
    keyboardAppearance: dart.finalFieldType(dart.nullable(ui.Brightness)),
    validator: dart.finalFieldType(dart.nullable(dart.fnType(dart.nullable(core.String), [dart.nullable(core.String)]))),
    onSaved: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [dart.nullable(core.String)]))),
    autovalidateMode: dart.finalFieldType(form.AutovalidateMode),
    errorTextSpace: dart.finalFieldType(core.double),
    enablePinAutofill: dart.finalFieldType(core.bool),
    errorAnimationDuration: dart.finalFieldType(core.int),
    showCursor: dart.finalFieldType(core.bool),
    cursorColor: dart.finalFieldType(dart.nullable(ui.Color)),
    cursorWidth: dart.finalFieldType(core.double),
    cursorHeight: dart.finalFieldType(dart.nullable(core.double)),
    onAutoFillDisposeAction: dart.finalFieldType(autofill.AutofillContextAction),
    useExternalAutoFillGroup: dart.finalFieldType(core.bool),
    hintCharacter: dart.finalFieldType(dart.nullable(core.String)),
    hintStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    scrollPadding: dart.finalFieldType(edge_insets.EdgeInsets),
    textGradient: dart.finalFieldType(dart.nullable(gradient.Gradient)),
    readOnly: dart.finalFieldType(core.bool)
  }));
  var _textEditingController = dart.privateName(pin_code_fields, "_textEditingController");
  var _focusNode = dart.privateName(pin_code_fields, "_focusNode");
  var ___PinCodeTextFieldState__inputList = dart.privateName(pin_code_fields, "_#_PinCodeTextFieldState#_inputList");
  var _selectedIndex = dart.privateName(pin_code_fields, "_selectedIndex");
  var _hasBlinked = dart.privateName(pin_code_fields, "_hasBlinked");
  var ___PinCodeTextFieldState__controller = dart.privateName(pin_code_fields, "_#_PinCodeTextFieldState#_controller");
  var ___PinCodeTextFieldState__cursorController = dart.privateName(pin_code_fields, "_#_PinCodeTextFieldState#_cursorController");
  var _errorAnimationSubscription = dart.privateName(pin_code_fields, "_errorAnimationSubscription");
  var ___PinCodeTextFieldState__offsetAnimation = dart.privateName(pin_code_fields, "_#_PinCodeTextFieldState#_offsetAnimation");
  var ___PinCodeTextFieldState__cursorAnimation = dart.privateName(pin_code_fields, "_#_PinCodeTextFieldState#_cursorAnimation");
  var _blinkDebounce = dart.privateName(pin_code_fields, "_blinkDebounce");
  var _inputList = dart.privateName(pin_code_fields, "_inputList");
  var _controller = dart.privateName(pin_code_fields, "_controller");
  var _cursorController = dart.privateName(pin_code_fields, "_cursorController");
  var _offsetAnimation = dart.privateName(pin_code_fields, "_offsetAnimation");
  var _cursorAnimation = dart.privateName(pin_code_fields, "_cursorAnimation");
  var _dialogConfig = dart.privateName(pin_code_fields, "_dialogConfig");
  var _pinTheme = dart.privateName(pin_code_fields, "_pinTheme");
  var _textStyle = dart.privateName(pin_code_fields, "_textStyle");
  var _hintStyle = dart.privateName(pin_code_fields, "_hintStyle");
  var _hintAvailable = dart.privateName(pin_code_fields, "_hintAvailable");
  var _checkForInvalidValues = dart.privateName(pin_code_fields, "_checkForInvalidValues");
  var _assignController = dart.privateName(pin_code_fields, "_assignController");
  var OffsetBase__dy = dart.privateName(ui, "OffsetBase._dy");
  var OffsetBase__dx = dart.privateName(ui, "OffsetBase._dx");
  var _setTextToInput = dart.privateName(pin_code_fields, "_setTextToInput");
  var _debounceBlink = dart.privateName(pin_code_fields, "_debounceBlink");
  var _getColorFromIndex = dart.privateName(pin_code_fields, "_getColorFromIndex");
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  var _renderPinField = dart.privateName(pin_code_fields, "_renderPinField");
  var _getFillColorFromIndex = dart.privateName(pin_code_fields, "_getFillColorFromIndex");
  var _getActionButtons = dart.privateName(pin_code_fields, "_getActionButtons");
  var _showPasteDialog = dart.privateName(pin_code_fields, "_showPasteDialog");
  var _onFocus = dart.privateName(pin_code_fields, "_onFocus");
  var _generateFields = dart.privateName(pin_code_fields, "_generateFields");
  const State_TickerProviderStateMixin$36 = class State_TickerProviderStateMixin extends framework.State$(pin_code_fields.PinCodeTextField) {};
  (State_TickerProviderStateMixin$36.new = function() {
    ticker_provider.TickerProviderStateMixin$(pin_code_fields.PinCodeTextField)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36, ticker_provider.TickerProviderStateMixin$(pin_code_fields.PinCodeTextField));
  pin_code_fields._PinCodeTextFieldState = class _PinCodeTextFieldState extends State_TickerProviderStateMixin$36 {
    get [_inputList]() {
      let t0;
      t0 = this[___PinCodeTextFieldState__inputList];
      return t0 == null ? dart.throw(new _internal.LateError.fieldNI("_inputList")) : t0;
    }
    set [_inputList](t0) {
      this[___PinCodeTextFieldState__inputList] = t0;
    }
    get [_controller]() {
      let t1;
      t1 = this[___PinCodeTextFieldState__controller];
      return t1 == null ? dart.throw(new _internal.LateError.fieldNI("_controller")) : t1;
    }
    set [_controller](t1) {
      this[___PinCodeTextFieldState__controller] = t1;
    }
    get [_cursorController]() {
      let t2;
      t2 = this[___PinCodeTextFieldState__cursorController];
      return t2 == null ? dart.throw(new _internal.LateError.fieldNI("_cursorController")) : t2;
    }
    set [_cursorController](t2) {
      this[___PinCodeTextFieldState__cursorController] = t2;
    }
    get [_offsetAnimation]() {
      let t3;
      t3 = this[___PinCodeTextFieldState__offsetAnimation];
      return t3 == null ? dart.throw(new _internal.LateError.fieldNI("_offsetAnimation")) : t3;
    }
    set [_offsetAnimation](t3) {
      this[___PinCodeTextFieldState__offsetAnimation] = t3;
    }
    get [_cursorAnimation]() {
      let t4;
      t4 = this[___PinCodeTextFieldState__cursorAnimation];
      return t4 == null ? dart.throw(new _internal.LateError.fieldNI("_cursorAnimation")) : t4;
    }
    set [_cursorAnimation](t4) {
      this[___PinCodeTextFieldState__cursorAnimation] = t4;
    }
    get [_dialogConfig]() {
      return this.widget.dialogConfig == null ? pin_code_fields.DialogConfig.new() : pin_code_fields.DialogConfig.new({affirmativeText: dart.nullCheck(this.widget.dialogConfig).affirmativeText, dialogContent: dart.nullCheck(this.widget.dialogConfig).dialogContent, dialogTitle: dart.nullCheck(this.widget.dialogConfig).dialogTitle, negativeText: dart.nullCheck(this.widget.dialogConfig).negativeText});
    }
    get [_pinTheme]() {
      return this.widget.pinTheme;
    }
    get [_textStyle]() {
      return new text_style.TextStyle.new({fontSize: 20.0, fontWeight: ui.FontWeight.bold}).merge(this.widget.textStyle);
    }
    get [_hintStyle]() {
      return this[_textStyle].copyWith({color: this[_pinTheme].disabledColor}).merge(this.widget.hintStyle);
    }
    get [_hintAvailable]() {
      return this.widget.hintCharacter != null;
    }
    initState() {
      let t5;
      this[_checkForInvalidValues]();
      this[_assignController]();
      if (this[_pinTheme].shape !== pin_code_fields.PinCodeFieldShape.circle && this[_pinTheme].shape !== pin_code_fields.PinCodeFieldShape.underline) {
        this.borderRadius = this[_pinTheme].borderRadius;
      }
      this[_focusNode] = (t5 = this.widget.focusNode, t5 == null ? new focus_manager.FocusNode.new() : t5);
      dart.nullCheck(this[_focusNode]).addListener(dart.fn(() => {
        this.setState(dart.fn(() => {
        }, T.VoidTovoid()));
      }, T.VoidTovoid()));
      this[_inputList] = T.ListOfString().filled(this.widget.length, "");
      this[_hasBlinked] = true;
      this[_cursorController] = new animation_controller.AnimationController.new({duration: new core.Duration.new({milliseconds: 1000}), vsync: this});
      this[_cursorAnimation] = new (T.TweenOfdouble()).new({begin: 1.0, end: 0.0}).animate(new animations.CurvedAnimation.new({parent: this[_cursorController], curve: curves.Curves.easeIn}));
      this[_controller] = new animation_controller.AnimationController.new({duration: new core.Duration.new({milliseconds: this.widget.errorAnimationDuration}), vsync: this});
      this[_offsetAnimation] = new (T.TweenOfOffset()).new({begin: ui.Offset.zero, end: C[84] || CT.C84}).animate(new animations.CurvedAnimation.new({parent: this[_controller], curve: curves.Curves.elasticIn}));
      if (this.widget.showCursor) {
        this[_cursorController].repeat();
      }
      this[_controller].addStatusListener(dart.fn(status => {
        if (status === animation.AnimationStatus.completed) {
          this[_controller].reverse();
        }
      }, T.AnimationStatusTovoid()));
      if (this.widget.errorAnimationController != null) {
        this[_errorAnimationSubscription] = dart.nullCheck(this.widget.errorAnimationController).stream.listen(dart.fn(errorAnimation => {
          if (errorAnimation === pin_code_fields.ErrorAnimationType.shake) {
            this[_controller].forward();
            this.setState(dart.fn(() => this.isInErrorMode = true, T.VoidTovoid()));
          }
        }, T.ErrorAnimationTypeTovoid()));
      }
      if (dart.nullCheck(this[_textEditingController]).text[$isNotEmpty]) this[_setTextToInput](dart.nullCheck(this[_textEditingController]).text);
      super.initState();
    }
    [_checkForInvalidValues]() {
      if (!(this.widget.length > 0)) dart.assertFailed(null, I[1], 375, 12, "widget.length > 0");
      if (!(this[_pinTheme].fieldHeight > 0)) dart.assertFailed(null, I[1], 376, 12, "_pinTheme.fieldHeight > 0");
      if (!(this[_pinTheme].fieldWidth > 0)) dart.assertFailed(null, I[1], 377, 12, "_pinTheme.fieldWidth > 0");
      if (!(this[_pinTheme].borderWidth >= 0)) dart.assertFailed(null, I[1], 378, 12, "_pinTheme.borderWidth >= 0");
      if (!(this[_dialogConfig].affirmativeText != null && dart.nullCheck(this[_dialogConfig].affirmativeText)[$isNotEmpty])) dart.assertFailed(null, I[1], 379, 12, "_dialogConfig.affirmativeText != null &&\n        _dialogConfig.affirmativeText!.isNotEmpty");
      if (!(this[_dialogConfig].negativeText != null && dart.nullCheck(this[_dialogConfig].negativeText)[$isNotEmpty])) dart.assertFailed(null, I[1], 381, 12, "_dialogConfig.negativeText != null &&\n        _dialogConfig.negativeText!.isNotEmpty");
      if (!(this[_dialogConfig].dialogTitle != null && dart.nullCheck(this[_dialogConfig].dialogTitle)[$isNotEmpty])) dart.assertFailed(null, I[1], 383, 12, "_dialogConfig.dialogTitle != null &&\n        _dialogConfig.dialogTitle!.isNotEmpty");
      if (!(this[_dialogConfig].dialogContent != null && dart.nullCheck(this[_dialogConfig].dialogContent)[$isNotEmpty])) dart.assertFailed(null, I[1], 385, 12, "_dialogConfig.dialogContent != null &&\n        _dialogConfig.dialogContent!.isNotEmpty");
    }
    runHapticFeedback() {
      switch (this.widget.hapticFeedbackTypes) {
        case C[0] || CT.C0:
        {
          haptic_feedback.HapticFeedback.heavyImpact();
          break;
        }
        case C[2] || CT.C2:
        {
          haptic_feedback.HapticFeedback.mediumImpact();
          break;
        }
        case C[1] || CT.C1:
        {
          haptic_feedback.HapticFeedback.lightImpact();
          break;
        }
        case C[3] || CT.C3:
        {
          haptic_feedback.HapticFeedback.selectionClick();
          break;
        }
        case C[4] || CT.C4:
        {
          haptic_feedback.HapticFeedback.vibrate();
          break;
        }
        default:
        {
          break;
        }
      }
    }
    [_assignController]() {
      let t5;
      if (this.widget.controller == null) {
        this[_textEditingController] = new editable_text.TextEditingController.new();
      } else {
        this[_textEditingController] = this.widget.controller;
      }
      t5 = this[_textEditingController];
      t5 == null ? null : t5.addListener(dart.fn(() => {
        let t7, t6;
        if (this.widget.useHapticFeedback) {
          this.runHapticFeedback();
        }
        if (this.isInErrorMode) {
          this.setState(dart.fn(() => this.isInErrorMode = false, T.VoidTovoid()));
        }
        this[_debounceBlink]();
        let currentText = dart.nullCheck(this[_textEditingController]).text;
        if (this.widget.enabled && this[_inputList][$join]("") !== currentText) {
          if (currentText.length >= this.widget.length) {
            if (this.widget.onCompleted != null) {
              if (currentText.length > this.widget.length) {
                currentText = currentText[$substring](0, this.widget.length);
              }
              T.FutureOfvoid().delayed(new core.Duration.new({milliseconds: 300}), dart.fn(() => dart.nullCheck(this.widget.onCompleted)(currentText), T.VoidTovoid()));
            }
            if (this.widget.autoDismissKeyboard) dart.nullCheck(this[_focusNode]).unfocus();
          }
          t6 = this.widget;
          t7 = currentText;
          t6.onChanged(t7);
        }
        this[_setTextToInput](currentText);
      }, T.VoidTovoid()));
    }
    [_debounceBlink]() {
      let t5, t5$;
      if (this.widget.blinkWhenObscuring && dart.nullCheck(this[_textEditingController]).text.length > this[_inputList][$where](dart.fn(x => x[$isNotEmpty], T.StringTobool()))[$length]) {
        this.setState(dart.fn(() => {
          this[_hasBlinked] = false;
        }, T.VoidTovoid()));
        if (dart.test((t5$ = (t5 = this[_blinkDebounce], t5 == null ? null : t5.isActive), t5$ == null ? false : t5$))) {
          dart.nullCheck(this[_blinkDebounce]).cancel();
        }
        this[_blinkDebounce] = async.Timer.new(this.widget.blinkDuration, dart.fn(() => {
          this.setState(dart.fn(() => {
            this[_hasBlinked] = true;
          }, T.VoidTovoid()));
        }, T.VoidTovoid()));
      }
    }
    dispose() {
      let t5;
      if (this.widget.autoDisposeControllers) {
        dart.nullCheck(this[_textEditingController]).dispose();
        dart.nullCheck(this[_focusNode]).dispose();
      }
      t5 = this[_errorAnimationSubscription];
      t5 == null ? null : t5.cancel();
      this[_cursorController].dispose();
      this[_controller].dispose();
      super.dispose();
    }
    [_getColorFromIndex](index) {
      if (!this.widget.enabled) {
        return this[_pinTheme].disabledColor;
      }
      if ((this[_selectedIndex] === index || this[_selectedIndex] === index + 1 && index + 1 === this.widget.length) && dart.nullCheck(this[_focusNode]).hasFocus) {
        return this[_pinTheme].selectedColor;
      } else if (this[_selectedIndex] > index) {
        let relevantActiveColor = this[_pinTheme].activeColor;
        if (this.isInErrorMode) relevantActiveColor = this[_pinTheme].errorBorderColor;
        return relevantActiveColor;
      }
      let relevantInActiveColor = this[_pinTheme].inactiveColor;
      if (this.isInErrorMode) relevantInActiveColor = this[_pinTheme].errorBorderColor;
      return relevantInActiveColor;
    }
    [_renderPinField](opts) {
      let index = opts && 'index' in opts ? opts.index : null;
      if (!(index != null)) dart.assertFailed(null, I[1], 522, 12, "index != null");
      let showObscured = !this.widget.blinkWhenObscuring || this.widget.blinkWhenObscuring && this[_hasBlinked] || index !== this[_inputList][$where](dart.fn(x => x[$isNotEmpty], T.StringTobool()))[$length] - 1;
      if (this.widget.obscuringWidget != null) {
        if (showObscured) {
          if (this[_inputList][$_get](dart.nullCheck(index))[$isNotEmpty]) {
            return dart.nullCheck(this.widget.obscuringWidget);
          }
        }
      }
      if (this[_inputList][$_get](dart.nullCheck(index))[$isEmpty] && this[_hintAvailable]) {
        return new text$.Text.new(dart.nullCheck(this.widget.hintCharacter), {key: new (T.ValueKeyOfString()).new(this[_inputList][$_get](index)), style: this[_hintStyle], $creationLocationd_0dea112b090073317d4: C[85] || CT.C85});
      }
      let text = this.widget.obscureText && this[_inputList][$_get](index)[$isNotEmpty] && showObscured ? this.widget.obscuringCharacter : this[_inputList][$_get](index);
      return this.widget.textGradient != null ? new pin_code_fields.Gradiented.new({gradient: dart.nullCheck(this.widget.textGradient), child: new text$.Text.new(text, {key: new (T.ValueKeyOfString()).new(this[_inputList][$_get](index)), style: this[_textStyle].copyWith({color: colors.Colors.white}), $creationLocationd_0dea112b090073317d4: C[90] || CT.C90}), $creationLocationd_0dea112b090073317d4: C[95] || CT.C95}) : new text$.Text.new(text, {key: new (T.ValueKeyOfString()).new(this[_inputList][$_get](index)), style: this[_textStyle], $creationLocationd_0dea112b090073317d4: C[99] || CT.C99});
    }
    [_getFillColorFromIndex](index) {
      if (!this.widget.enabled) {
        return this[_pinTheme].disabledColor;
      }
      if ((this[_selectedIndex] === index || this[_selectedIndex] === index + 1 && index + 1 === this.widget.length) && dart.nullCheck(this[_focusNode]).hasFocus) {
        return this[_pinTheme].selectedFillColor;
      } else if (this[_selectedIndex] > index) {
        return this[_pinTheme].activeFillColor;
      }
      return this[_pinTheme].inactiveFillColor;
    }
    buildChild(index) {
      let t5, t5$, t5$0;
      if ((this[_selectedIndex] === index || this[_selectedIndex] === index + 1 && index + 1 === this.widget.length) && dart.nullCheck(this[_focusNode]).hasFocus && this.widget.showCursor) {
        let cursorColor = (t5$ = (t5 = this.widget.cursorColor, t5 == null ? theme.Theme.of(this.widget.appContext).textSelectionTheme.cursorColor : t5), t5$ == null ? theme.Theme.of(this.context).accentColor : t5$);
        let cursorHeight = (t5$0 = this.widget.cursorHeight, t5$0 == null ? dart.nullCheck(this[_textStyle].fontSize) + 8 : t5$0);
        if (this[_selectedIndex] === index + 1 && index + 1 === this.widget.length) {
          return new basic.Stack.new({alignment: alignment.Alignment.center, children: T.JSArrayOfWidget().of([new basic.Center.new({child: new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({left: dart.nullCheck(this[_textStyle].fontSize) / 1.5}), child: new transitions.FadeTransition.new({opacity: this[_cursorAnimation], child: new basic.CustomPaint.new({size: new ui.Size.new(0.0, cursorHeight), painter: new cursor_painter.CursorPainter.new({cursorColor: cursorColor, cursorWidth: this.widget.cursorWidth}), $creationLocationd_0dea112b090073317d4: C[104] || CT.C104}), $creationLocationd_0dea112b090073317d4: C[108] || CT.C108}), $creationLocationd_0dea112b090073317d4: C[112] || CT.C112}), $creationLocationd_0dea112b090073317d4: C[116] || CT.C116}), this[_renderPinField]({index: index})]), $creationLocationd_0dea112b090073317d4: C[119] || CT.C119});
        } else
          return new basic.Center.new({child: new transitions.FadeTransition.new({opacity: this[_cursorAnimation], child: new basic.CustomPaint.new({size: new ui.Size.new(0.0, cursorHeight), painter: new cursor_painter.CursorPainter.new({cursorColor: cursorColor, cursorWidth: this.widget.cursorWidth}), $creationLocationd_0dea112b090073317d4: C[123] || CT.C123}), $creationLocationd_0dea112b090073317d4: C[127] || CT.C127}), $creationLocationd_0dea112b090073317d4: C[131] || CT.C131});
      }
      return this[_renderPinField]({index: index});
    }
    [_showPasteDialog](pastedText) {
      let formattedPastedText = pastedText[$trim]()[$substring](0, math.min(core.int, pastedText[$trim]().length, this.widget.length));
      let defaultPastedTextStyle = new text_style.TextStyle.new({fontWeight: ui.FontWeight.bold, color: theme.Theme.of(this.context).accentColor});
      return dialog.showDialog(dart.void, {context: this.context, useRootNavigator: true, builder: dart.fn(context => {
          let t5, t5$;
          return this[_dialogConfig].platform === platform$.Platform.iOS ? new dialog$.CupertinoAlertDialog.new({title: new text$.Text.new(dart.nullCheck(this[_dialogConfig].dialogTitle), {$creationLocationd_0dea112b090073317d4: C[134] || CT.C134}), content: new basic.RichText.new({text: new text_span.TextSpan.new({text: this[_dialogConfig].dialogContent, style: new text_style.TextStyle.new({color: dart.nullCheck(theme.Theme.of(context).textTheme.button).color}), children: T.JSArrayOfInlineSpan().of([new text_span.TextSpan.new({text: formattedPastedText, style: (t5 = this.widget.pastedTextStyle, t5 == null ? defaultPastedTextStyle : t5)}), new text_span.TextSpan.new({text: "?", style: new text_style.TextStyle.new({color: dart.nullCheck(theme.Theme.of(context).textTheme.button).color})})])}), $creationLocationd_0dea112b090073317d4: C[137] || CT.C137}), actions: this[_getActionButtons](formattedPastedText), $creationLocationd_0dea112b090073317d4: C[140] || CT.C140}) : new dialog.AlertDialog.new({shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(10.0)}), title: new text$.Text.new(dart.nullCheck(this[_dialogConfig].dialogTitle), {$creationLocationd_0dea112b090073317d4: C[145] || CT.C145}), content: new basic.RichText.new({text: new text_span.TextSpan.new({text: this[_dialogConfig].dialogContent, style: new text_style.TextStyle.new({color: dart.nullCheck(theme.Theme.of(context).textTheme.button).color}), children: T.JSArrayOfInlineSpan().of([new text_span.TextSpan.new({text: formattedPastedText, style: (t5$ = this.widget.pastedTextStyle, t5$ == null ? defaultPastedTextStyle : t5$)}), new text_span.TextSpan.new({text: " ?", style: new text_style.TextStyle.new({color: dart.nullCheck(theme.Theme.of(context).textTheme.button).color})})])}), $creationLocationd_0dea112b090073317d4: C[148] || CT.C148}), actions: this[_getActionButtons](formattedPastedText), $creationLocationd_0dea112b090073317d4: C[151] || CT.C151});
        }, T.BuildContextToStatelessWidget())});
    }
    build(context) {
      let textField = new text_form_field.TextFormField.new({textInputAction: this.widget.textInputAction, controller: this[_textEditingController], focusNode: this[_focusNode], enabled: this.widget.enabled, autofillHints: this.widget.enablePinAutofill && this.widget.enabled ? T.JSArrayOfString().of(["oneTimeCode"]) : null, autofocus: this.widget.autoFocus, autocorrect: false, keyboardType: this.widget.keyboardType, keyboardAppearance: this.widget.keyboardAppearance, textCapitalization: this.widget.textCapitalization, validator: this.widget.validator, onSaved: this.widget.onSaved, autovalidateMode: this.widget.autovalidateMode, inputFormatters: (() => {
          let t5 = T.ListOfTextInputFormatter().of(this.widget.inputFormatters);
          t5[$add](new text_formatter.LengthLimitingTextInputFormatter.new(this.widget.length));
          return t5;
        })(), onFieldSubmitted: this.widget.onSubmitted, enableInteractiveSelection: false, showCursor: false, cursorWidth: 0.01, decoration: new input_decorator.InputDecoration.new({contentPadding: C[14] || CT.C14, border: input_border.InputBorder.none, fillColor: this.widget.backgroundColor, enabledBorder: input_border.InputBorder.none, focusedBorder: input_border.InputBorder.none, disabledBorder: input_border.InputBorder.none}), style: new text_style.TextStyle.new({color: colors.Colors.transparent, height: 0.01, fontSize: true ? 1.0 : 0.01}), scrollPadding: this.widget.scrollPadding, readOnly: this.widget.readOnly, $creationLocationd_0dea112b090073317d4: C[157] || CT.C157});
      return new transitions.SlideTransition.new({position: this[_offsetAnimation], child: new container.Container.new({height: this.widget.autovalidateMode === form.AutovalidateMode.disabled ? this.widget.pinTheme.fieldHeight : this.widget.pinTheme.fieldHeight + this.widget.errorTextSpace, color: this.widget.backgroundColor, child: new basic.Stack.new({alignment: alignment.Alignment.bottomCenter, children: T.JSArrayOfWidget().of([new basic.AbsorbPointer.new({absorbing: true, child: this.widget.useExternalAutoFillGroup ? textField : new autofill.AutofillGroup.new({onDisposeAction: this.widget.onAutoFillDisposeAction, child: textField, $creationLocationd_0dea112b090073317d4: C[181] || CT.C181}), $creationLocationd_0dea112b090073317d4: C[185] || CT.C185}), new basic.Positioned.new({top: 0.0, left: 0.0, right: 0.0, child: new gesture_detector.GestureDetector.new({onTap: dart.fn(() => {
                    if (this.widget.onTap != null) dart.dcall(dart.nullCheck(this.widget.onTap), []);
                    this[_onFocus]();
                  }, T.VoidTovoid()), onLongPress: this.widget.enabled ? dart.fn(() => async.async(dart.void, (function*() {
                    let t7, t6, t6$;
                    let data = (yield clipboard.Clipboard.getData("text/plain"));
                    if (dart.test((t6$ = (t6 = data, t6 == null ? null : (t7 = t6.text, t7 == null ? null : t7[$isNotEmpty])), t6$ == null ? false : t6$))) {
                      if (this.widget.beforeTextPaste != null) {
                        if (dart.nullCheck(this.widget.beforeTextPaste)(dart.nullCheck(data).text)) {
                          this[_showPasteDialog](dart.nullCheck(data.text));
                        }
                      } else {
                        this[_showPasteDialog](dart.nullCheck(dart.nullCheck(data).text));
                      }
                    }
                  }).bind(this)), T.VoidToFutureOfvoid()) : null, child: new basic.Row.new({mainAxisAlignment: this.widget.mainAxisAlignment, children: this[_generateFields](), $creationLocationd_0dea112b090073317d4: C[189] || CT.C189}), $creationLocationd_0dea112b090073317d4: C[193] || CT.C193}), $creationLocationd_0dea112b090073317d4: C[198] || CT.C198})]), $creationLocationd_0dea112b090073317d4: C[204] || CT.C204}), $creationLocationd_0dea112b090073317d4: C[208] || CT.C208}), $creationLocationd_0dea112b090073317d4: C[213] || CT.C213});
    }
    [_generateFields]() {
      let result = T.JSArrayOfWidget().of([]);
      for (let i = 0; i < this.widget.length; i = i + 1) {
        result[$add](new container.Container.new({padding: this[_pinTheme].fieldOuterPadding, child: new implicit_animations.AnimatedContainer.new({curve: this.widget.animationCurve, duration: this.widget.animationDuration, width: this[_pinTheme].fieldWidth, height: this[_pinTheme].fieldHeight, decoration: new box_decoration.BoxDecoration.new({color: this.widget.enableActiveFill ? this[_getFillColorFromIndex](i) : colors.Colors.transparent, boxShadow: this.widget.boxShadows, shape: this[_pinTheme].shape === pin_code_fields.PinCodeFieldShape.circle ? box_border.BoxShape.circle : box_border.BoxShape.rectangle, borderRadius: this.borderRadius, border: this[_pinTheme].shape === pin_code_fields.PinCodeFieldShape.underline ? new box_border.Border.new({bottom: new borders.BorderSide.new({color: this[_getColorFromIndex](i), width: this[_pinTheme].borderWidth})}) : box_border.Border.all({color: this[_getColorFromIndex](i), width: this[_pinTheme].borderWidth})}), child: new basic.Center.new({child: new animated_switcher.AnimatedSwitcher.new({switchInCurve: this.widget.animationCurve, switchOutCurve: this.widget.animationCurve, duration: this.widget.animationDuration, transitionBuilder: dart.fn((child, animation) => {
                  if (this.widget.animationType === pin_code_fields.AnimationType.scale) {
                    return new transitions.ScaleTransition.new({scale: animation, child: child, $creationLocationd_0dea112b090073317d4: C[217] || CT.C217});
                  } else if (this.widget.animationType === pin_code_fields.AnimationType.fade) {
                    return new transitions.FadeTransition.new({opacity: animation, child: child, $creationLocationd_0dea112b090073317d4: C[221] || CT.C221});
                  } else if (this.widget.animationType === pin_code_fields.AnimationType.none) {
                    return child;
                  } else {
                    return new transitions.SlideTransition.new({position: new (T.TweenOfOffset()).new({begin: C[225] || CT.C225, end: ui.Offset.zero}).animate(animation), child: child, $creationLocationd_0dea112b090073317d4: C[226] || CT.C226});
                  }
                }, T.WidgetAndAnimationOfdoubleToWidget()), child: this.buildChild(i), $creationLocationd_0dea112b090073317d4: C[230] || CT.C230}), $creationLocationd_0dea112b090073317d4: C[237] || CT.C237}), $creationLocationd_0dea112b090073317d4: C[240] || CT.C240}), $creationLocationd_0dea112b090073317d4: C[248] || CT.C248}));
      }
      return result;
    }
    [_onFocus]() {
      if (dart.nullCheck(this[_focusNode]).hasFocus && media_query.MediaQuery.of(this.widget.appContext).viewInsets.bottom === 0) {
        dart.nullCheck(this[_focusNode]).unfocus();
        T.FutureOfvoid().delayed(C[252] || CT.C252, dart.fn(() => dart.nullCheck(this[_focusNode]).requestFocus(), T.VoidTovoid()));
      } else {
        dart.nullCheck(this[_focusNode]).requestFocus();
      }
    }
    [_setTextToInput](data) {
      return async.async(dart.void, (function* _setTextToInput() {
        let replaceInputList = T.ListOfString().filled(this.widget.length, "");
        for (let i = 0; i < this.widget.length; i = i + 1) {
          replaceInputList[$_set](i, data.length > i ? data[$_get](i) : "");
        }
        if (this.mounted) this.setState(dart.fn(() => {
          this[_selectedIndex] = data.length;
          this[_inputList] = replaceInputList;
        }, T.VoidTovoid()));
      }).bind(this));
    }
    [_getActionButtons](pastedText) {
      let resultList = T.JSArrayOfWidget().of([]);
      if (this[_dialogConfig].platform === platform$.Platform.iOS) {
        resultList[$addAll](T.JSArrayOfWidget().of([new dialog$.CupertinoDialogAction.new({child: new text$.Text.new(dart.nullCheck(this[_dialogConfig].negativeText), {$creationLocationd_0dea112b090073317d4: C[253] || CT.C253}), onPressed: dart.fn(() => {
              navigator.Navigator.of(this.context, {rootNavigator: true}).pop(T.ObjectN());
            }, T.VoidTovoid()), $creationLocationd_0dea112b090073317d4: C[256] || CT.C256}), new dialog$.CupertinoDialogAction.new({child: new text$.Text.new(dart.nullCheck(this[_dialogConfig].affirmativeText), {$creationLocationd_0dea112b090073317d4: C[260] || CT.C260}), onPressed: dart.fn(() => {
              dart.nullCheck(this[_textEditingController]).text = pastedText;
              navigator.Navigator.of(this.context, {rootNavigator: true}).pop(T.ObjectN());
            }, T.VoidTovoid()), $creationLocationd_0dea112b090073317d4: C[263] || CT.C263})]));
      } else {
        resultList[$addAll](T.JSArrayOfWidget().of([new text_button.TextButton.new({child: new text$.Text.new(dart.nullCheck(this[_dialogConfig].negativeText), {$creationLocationd_0dea112b090073317d4: C[267] || CT.C267}), onPressed: dart.fn(() => {
              navigator.Navigator.of(this.context, {rootNavigator: true}).pop(T.ObjectN());
            }, T.VoidTovoid()), $creationLocationd_0dea112b090073317d4: C[270] || CT.C270}), new text_button.TextButton.new({child: new text$.Text.new(dart.nullCheck(this[_dialogConfig].affirmativeText), {$creationLocationd_0dea112b090073317d4: C[274] || CT.C274}), onPressed: dart.fn(() => {
              dart.nullCheck(this[_textEditingController]).text = pastedText;
              navigator.Navigator.of(this.context, {rootNavigator: true}).pop(T.ObjectN());
            }, T.VoidTovoid()), $creationLocationd_0dea112b090073317d4: C[277] || CT.C277})]));
      }
      return resultList;
    }
  };
  (pin_code_fields._PinCodeTextFieldState.new = function() {
    this[_textEditingController] = null;
    this[_focusNode] = null;
    this[___PinCodeTextFieldState__inputList] = null;
    this[_selectedIndex] = 0;
    this.borderRadius = null;
    this[_hasBlinked] = false;
    this[___PinCodeTextFieldState__controller] = null;
    this[___PinCodeTextFieldState__cursorController] = null;
    this[_errorAnimationSubscription] = null;
    this.isInErrorMode = false;
    this[___PinCodeTextFieldState__offsetAnimation] = null;
    this[___PinCodeTextFieldState__cursorAnimation] = null;
    this[_blinkDebounce] = null;
    pin_code_fields._PinCodeTextFieldState.__proto__.new.call(this);
    ;
  }).prototype = pin_code_fields._PinCodeTextFieldState.prototype;
  dart.addTypeTests(pin_code_fields._PinCodeTextFieldState);
  dart.addTypeCaches(pin_code_fields._PinCodeTextFieldState);
  dart.setMethodSignature(pin_code_fields._PinCodeTextFieldState, () => ({
    __proto__: dart.getMethods(pin_code_fields._PinCodeTextFieldState.__proto__),
    [_checkForInvalidValues]: dart.fnType(dart.void, []),
    runHapticFeedback: dart.fnType(dart.dynamic, []),
    [_assignController]: dart.fnType(dart.void, []),
    [_debounceBlink]: dart.fnType(dart.void, []),
    [_getColorFromIndex]: dart.fnType(ui.Color, [core.int]),
    [_renderPinField]: dart.fnType(framework.Widget, [], {index: dart.nullable(core.int)}, {}),
    [_getFillColorFromIndex]: dart.fnType(ui.Color, [core.int]),
    buildChild: dart.fnType(framework.Widget, [core.int]),
    [_showPasteDialog]: dart.fnType(async.Future$(dart.void), [core.String]),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_generateFields]: dart.fnType(core.List$(framework.Widget), []),
    [_onFocus]: dart.fnType(dart.void, []),
    [_setTextToInput]: dart.fnType(dart.void, [core.String]),
    [_getActionButtons]: dart.fnType(core.List$(framework.Widget), [core.String])
  }));
  dart.setGetterSignature(pin_code_fields._PinCodeTextFieldState, () => ({
    __proto__: dart.getGetters(pin_code_fields._PinCodeTextFieldState.__proto__),
    [_inputList]: core.List$(core.String),
    [_controller]: animation_controller.AnimationController,
    [_cursorController]: animation_controller.AnimationController,
    [_offsetAnimation]: animation.Animation$(ui.Offset),
    [_cursorAnimation]: animation.Animation$(core.double),
    [_dialogConfig]: pin_code_fields.DialogConfig,
    [_pinTheme]: pin_code_fields.PinTheme,
    [_textStyle]: text_style.TextStyle,
    [_hintStyle]: text_style.TextStyle,
    [_hintAvailable]: core.bool
  }));
  dart.setSetterSignature(pin_code_fields._PinCodeTextFieldState, () => ({
    __proto__: dart.getSetters(pin_code_fields._PinCodeTextFieldState.__proto__),
    [_inputList]: core.List$(core.String),
    [_controller]: animation_controller.AnimationController,
    [_cursorController]: animation_controller.AnimationController,
    [_offsetAnimation]: animation.Animation$(ui.Offset),
    [_cursorAnimation]: animation.Animation$(core.double)
  }));
  dart.setLibraryUri(pin_code_fields._PinCodeTextFieldState, I[0]);
  dart.setFieldSignature(pin_code_fields._PinCodeTextFieldState, () => ({
    __proto__: dart.getFields(pin_code_fields._PinCodeTextFieldState.__proto__),
    [_textEditingController]: dart.fieldType(dart.nullable(editable_text.TextEditingController)),
    [_focusNode]: dart.fieldType(dart.nullable(focus_manager.FocusNode)),
    [___PinCodeTextFieldState__inputList]: dart.fieldType(dart.nullable(core.List$(core.String))),
    [_selectedIndex]: dart.fieldType(core.int),
    borderRadius: dart.fieldType(dart.nullable(border_radius.BorderRadius)),
    [_hasBlinked]: dart.fieldType(core.bool),
    [___PinCodeTextFieldState__controller]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [___PinCodeTextFieldState__cursorController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [_errorAnimationSubscription]: dart.fieldType(dart.nullable(async.StreamSubscription$(pin_code_fields.ErrorAnimationType))),
    isInErrorMode: dart.fieldType(core.bool),
    [___PinCodeTextFieldState__offsetAnimation]: dart.fieldType(dart.nullable(animation.Animation$(ui.Offset))),
    [___PinCodeTextFieldState__cursorAnimation]: dart.fieldType(dart.nullable(animation.Animation$(core.double))),
    [_blinkDebounce]: dart.fieldType(dart.nullable(async.Timer))
  }));
  pin_code_fields.PinCodeFieldShape = class PinCodeFieldShape extends core.Object {
    toString() {
      return this[_name$];
    }
  };
  (pin_code_fields.PinCodeFieldShape.new = function(index, _name) {
    this.index = index;
    this[_name$] = _name;
    ;
  }).prototype = pin_code_fields.PinCodeFieldShape.prototype;
  dart.addTypeTests(pin_code_fields.PinCodeFieldShape);
  dart.addTypeCaches(pin_code_fields.PinCodeFieldShape);
  dart.setLibraryUri(pin_code_fields.PinCodeFieldShape, I[0]);
  dart.setFieldSignature(pin_code_fields.PinCodeFieldShape, () => ({
    __proto__: dart.getFields(pin_code_fields.PinCodeFieldShape.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(pin_code_fields.PinCodeFieldShape, ['toString']);
  pin_code_fields.PinCodeFieldShape.box = C[281] || CT.C281;
  pin_code_fields.PinCodeFieldShape.underline = C[15] || CT.C15;
  pin_code_fields.PinCodeFieldShape.circle = C[282] || CT.C282;
  pin_code_fields.PinCodeFieldShape.values = C[283] || CT.C283;
  pin_code_fields.ErrorAnimationType = class ErrorAnimationType extends core.Object {
    toString() {
      return this[_name$];
    }
  };
  (pin_code_fields.ErrorAnimationType.new = function(index, _name) {
    this.index = index;
    this[_name$] = _name;
    ;
  }).prototype = pin_code_fields.ErrorAnimationType.prototype;
  dart.addTypeTests(pin_code_fields.ErrorAnimationType);
  dart.addTypeCaches(pin_code_fields.ErrorAnimationType);
  dart.setLibraryUri(pin_code_fields.ErrorAnimationType, I[0]);
  dart.setFieldSignature(pin_code_fields.ErrorAnimationType, () => ({
    __proto__: dart.getFields(pin_code_fields.ErrorAnimationType.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(pin_code_fields.ErrorAnimationType, ['toString']);
  pin_code_fields.ErrorAnimationType.shake = C[284] || CT.C284;
  pin_code_fields.ErrorAnimationType.values = C[285] || CT.C285;
  var gradient$ = dart.privateName(pin_code_fields, "Gradiented.gradient");
  var child$ = dart.privateName(pin_code_fields, "Gradiented.child");
  pin_code_fields.Gradiented = class Gradiented extends framework.StatelessWidget {
    get gradient() {
      return this[gradient$];
    }
    set gradient(value) {
      super.gradient = value;
    }
    get child() {
      return this[child$];
    }
    set child(value) {
      super.child = value;
    }
    build(context) {
      return new basic.ShaderMask.new({shaderCallback: dart.bind(this.gradient, 'createShader'), child: this.child, $creationLocationd_0dea112b090073317d4: C[286] || CT.C286});
    }
  };
  (pin_code_fields.Gradiented.new = function(opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    let gradient = opts && 'gradient' in opts ? opts.gradient : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$] = child;
    this[gradient$] = gradient;
    pin_code_fields.Gradiented.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = pin_code_fields.Gradiented.prototype;
  dart.addTypeTests(pin_code_fields.Gradiented);
  dart.addTypeCaches(pin_code_fields.Gradiented);
  dart.setMethodSignature(pin_code_fields.Gradiented, () => ({
    __proto__: dart.getMethods(pin_code_fields.Gradiented.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(pin_code_fields.Gradiented, I[0]);
  dart.setFieldSignature(pin_code_fields.Gradiented, () => ({
    __proto__: dart.getFields(pin_code_fields.Gradiented.__proto__),
    gradient: dart.finalFieldType(gradient.Gradient),
    child: dart.finalFieldType(framework.Widget)
  }));
  dart.trackLibraries("packages/pin_code_fields/pin_code_fields.dart", {
    "package:pin_code_fields/pin_code_fields.dart": pin_code_fields
  }, {
    "package:pin_code_fields/pin_code_fields.dart": ["src/models/haptic_feedback_type.dart", "src/models/animation_type.dart", "src/models/dialog_config.dart", "src/models/pin_theme.dart", "src/pin_code_fields.dart", "src/gradiented.dart"]
  }, '{"version":3,"sourceRoot":"","sources":["src/models/haptic_feedback_type.dart","src/models/animation_type.dart","src/models/dialog_config.dart","src/models/pin_theme.dart","src/pin_code_fields.dart","src/gradiented.dart"],"names":[],"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","file":"../../../../../../../../packages/pin_code_fields/pin_code_fields.dart.lib.js"}');
  // Exports:
  return {
    pin_code_fields: pin_code_fields
  };
}));

//# sourceMappingURL=pin_code_fields.dart.lib.js.map
